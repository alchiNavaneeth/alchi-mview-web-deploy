{
  "version": 3,
  "sources": ["src/app/modules/media/session/session.component.ts", "src/app/modules/media/session/session.component.html", "src/app/modules/media/session/components/save-search/save-search.component.ts", "src/app/modules/media/session/components/save-search/save-search.component.html", "src/app/modules/media/session/components/advanced-filter/advanced-filter.component.ts", "src/app/modules/media/session/components/advanced-filter/advanced-filter.component.html", "src/app/modules/media/session/components/basic-filter/basic-filter.component.ts", "src/app/modules/media/session/components/basic-filter/basic-filter.component.html", "src/app/modules/media/session/components/file-card/file-card.component.ts", "src/app/modules/media/session/components/file-card/file-card.component.html", "src/environments/environment.production.ts", "src/app/modules/shared/services/google-maps.service.ts", "src/app/modules/media/session/components/session-card/session-card.component.ts", "src/app/modules/media/session/components/session-card/session-card.component.html", "src/app/modules/media/session/search/search.component.ts", "src/app/modules/media/session/search/search.component.html", "src/app/modules/media/session/session-routing.module.ts", "src/app/modules/media/session/session.module.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\n\n@Component({\n  standalone: false,\n  selector: 'app-session',\n  templateUrl: './session.component.html',\n  styleUrl: './session.component.scss'\n})\nexport class SessionComponent {}\n", "<div>\n  <router-outlet></router-outlet>\n</div>\n", "import { Component, ElementRef, inject, input, signal, TemplateRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'save-search',\n  standalone: false,\n  templateUrl: './save-search.component.html',\n  styleUrl: './save-search.component.scss',\n  host: {\n    '(document:click)': 'closeDropdown($event)'\n  }\n})\nexport class SaveSearchComponent {\n  private readonly el = inject(ElementRef);\n  private readonly dialog = inject(MatDialog);\n\n  $saveSearchList = input.required<string[]>({ alias: 'saveSearchList' });\n  $customClass = input<string>('', { alias: 'customClass' });\n  $disabled = input.required<boolean>({ alias: 'disabled' });\n\n  $isSaveSearchExpanded = signal<boolean>(false);\n  $selectedSavedSearch = signal<string>('');\n\n  constructor() {}\n\n  openDialog(templateRef: TemplateRef<any>) {\n    if (this.$disabled()) return;\n\n    this.dialog.open(templateRef, {\n      width: '360px'\n    });\n  }\n\n  expandSaveSearch() {\n    this.$isSaveSearchExpanded.update((prev) => !prev);\n  }\n\n  getSelectedItem(item: any) {\n    this.$selectedSavedSearch.set(item);\n  }\n\n  closeDropdown(event: any) {\n    if (!this.el.nativeElement.contains(event.target)) {\n      if (this.$isSaveSearchExpanded()) this.$isSaveSearchExpanded.set(false);\n    }\n  }\n}\n", "<div class=\"save-search-btn {{ $customClass() }}\">\n  <span class=\"btn-span pointer\" [class.btn-disabled]=\"$disabled()\" (click)=\"openDialog(template)\"> Save Search </span>\n\n  <div class=\"dropdown-toggle-btn pointer\" (click)=\"expandSaveSearch()\">\n    <mat-icon [class.expanded]=\"$isSaveSearchExpanded()\">keyboard_arrow_down</mat-icon>\n  </div>\n\n  <div class=\"dropdown-wrapper show\" *ngIf=\"$isSaveSearchExpanded()\">\n    <div class=\"shadow-normal dropdown\">\n      <ng-container *ngFor=\"let item of $saveSearchList()\">\n        <li (class.selected)=\"item === $selectedSavedSearch()\">\n          <span class=\"save-title\">Incident Logs</span>\n          <span class=\"save-date\">04/02/2025 14:20</span>\n\n          <div class=\"save-state\" (click)=\"getSelectedItem(item)\">\n            @if(item !== $selectedSavedSearch()) { Load } @else {\n            <svg viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M1.66602 9.2207L3.99935 11.6654L4.68202 10.95M10.9993 4.33203L6.95735 8.5667M4.99935 9.2207L7.33268 11.6654L14.3327 4.33203\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n              />\n            </svg>\n            }\n          </div>\n\n          <div class=\"save-delete\">\n            <svg viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M3.12532 4.1437L4.53398 12.6524C4.59842 13.0419 4.79904 13.3959 5.10012 13.6513C5.40119 13.9067 5.78317 14.047 6.17798 14.047H8.40998M12.8753 4.1437L11.4673 12.6524C11.4029 13.0419 11.2023 13.3959 10.9012 13.6513C10.6001 13.9067 10.2181 14.047 9.82332 14.047H7.59132M6.68198 7.41237V10.7784M9.31932 7.41237V10.7784M1.83398 4.1437H14.1673M9.85198 4.1437V2.95703C9.85198 2.69181 9.74663 2.43746 9.55909 2.24992C9.37155 2.06239 9.1172 1.95703 8.85198 1.95703H7.14932C6.8841 1.95703 6.62975 2.06239 6.44221 2.24992C6.25467 2.43746 6.14932 2.69181 6.14932 2.95703V4.1437H9.85198Z\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n              />\n            </svg>\n          </div>\n        </li>\n      </ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #template>\n  <div class=\"save-search-dialog-wrapper\">\n    <div class=\"d-flex align-items-center justify-content-between mb-3\">\n      <span class=\"text-normal text-primary-jet\">Save search</span>\n      <mat-icon class=\"text-primary-charcoal pointer\" mat-dialog-close>close</mat-icon>\n    </div>\n\n    <div class=\"text-primary-charcoal text-small mb-2\">Enter a name for the saved search</div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Enter name\" />\n\n    <div class=\"d-flex align-items-center justify-content-between mt-3 gap-3\">\n      <button class=\"btn border-primary-blue border-1 text-small flex-grow-1 save-search\" mat-dialog-close>\n        Save search\n      </button>\n      <button class=\"btn bg-primary-ash text-white text-small border-1 flex-grow-1\" mat-dialog-close>Cancel</button>\n    </div>\n  </div>\n</ng-template>\n", "import { Component, inject } from '@angular/core';\n\nimport { SessionData } from 'src/app/data/session.data';\n\nimport { CategoryApiService, EventCodeApiService, OrganizationApiService, UserApiService } from 'src/app/api';\nimport { CategoriesModel, ICVEventsModel, OrganizationModel, UserModel } from 'src/app/api/model/models';\n\nimport { SearchFormData, SearchService } from '../../search/search.service';\n\n@Component({\n  selector: 'app-advanced-filter',\n  standalone: false,\n  templateUrl: './advanced-filter.component.html',\n  styleUrl: './advanced-filter.component.scss'\n})\nexport class AdvancedFilterComponent {\n  private readonly searchService = inject(SearchService);\n  private readonly organizationApiService = inject(OrganizationApiService);\n  private readonly categoryApiService = inject(CategoryApiService);\n  private readonly eventCodeApiService = inject(EventCodeApiService);\n  private readonly userApiService = inject(UserApiService);\n\n  $formdata = this.searchService.formData;\n\n  isLoading: boolean;\n  saveSearchList: string[] = ['one', 'two', 'three', 'three', 'three', 'three', 'three'];\n\n  selectedFromDateModel!: Date;\n  selectedToDateModel!: Date;\n\n  organizationList: string[] = SessionData.organizationList;\n  organizationIdList: number[] = [0]; // For company IDs\n\n  accountList: string[] = SessionData.accountList;\n  accountIdList: number[] = [0]; // For account/user IDs\n\n  categoryList: string[] = SessionData.categoryList;\n  categoryIdList: number[] = [0]; // For category IDs\n\n  bwvList: string[] = ['Mesh MTS', 'Mesh Camera']; // ? Is API call for this necessary\n  bwvIdList: string[] = []; // For bwv IDs\n\n  mediaSourceList: string[] = ['Body worn camera', 'In-car video events'];\n  sessionLocationList: string[] = [\n    'Local storage',\n    'Cloud storage',\n    'Dock server',\n    'In-car',\n    'In-camera',\n    'Video edit'\n  ];\n  sessionFiltersList: string[] = ['Streamed', 'Deleted', 'Stealth only', 'Restricted', 'Redacted', 'Review redaction'];\n\n  icvList: string[] = SessionData.icvList;\n\n  constructor() {\n    this.isLoading = false;\n  }\n\n  get isFormValid() {\n    const isValid =\n      this.$formdata().date !== '' && this.$formdata().organization !== '' && this.$formdata().user !== '';\n\n    return isValid;\n  }\n\n  get canSaveAndReset(): boolean {\n    return !this.searchService.isUnchanged();\n  }\n\n  get listDisabled(): string {\n    return this.$formdata().mediaSource;\n  }\n\n  handleDateChange(data: { val: string; start: Date | undefined; end: Date | undefined }) {\n    this.searchService.updateFormData({\n      date: data.val\n    });\n\n    this.searchService.updateDateRange({ start: data.start, end: data.end });\n  }\n\n  handleSingleSelectDrop(key: keyof SearchFormData, data: string) {\n    this.searchService.updateFormData({\n      [key]: data\n    });\n  }\n\n  handleMultiSelectDrop(key: keyof SearchFormData, data: string) {\n    const existing_list: string[] = this.$formdata()[key] as string[];\n\n    if (!existing_list.includes(data)) {\n      existing_list.push(data);\n    } else {\n      const index = existing_list.indexOf(data);\n      existing_list.splice(index, 1);\n    }\n\n    this.searchService.updateFormData({\n      [key]: existing_list\n    });\n  }\n\n  resetFilters() {\n    if (!this.canSaveAndReset) return;\n    this.searchService.resetForm('advanced');\n  }\n\n  onSearch() {\n    // const organizationId =\n    //   this.organizationIdList[this.organizationList.indexOf(this.sessionService.dropdownsData.selectedOrganization)];\n\n    // const accountId = this.accountIdList[this.accountList.indexOf(this.sessionService.dropdownsData.selectedAccount)];\n    // const categoryId =\n    //   this.categoryIdList[this.categoryList.indexOf(this.sessionService.dropdownsData.selectedCategory)];\n    // const bwvId = this.bwvIdList[this.bwvList.indexOf(this.sessionService.dropdownsData.selectedBWV)];\n\n    // this.sessionService.setDropdownsData('selectedOrganizationId', organizationId ? organizationId.toString() : '');\n    // this.sessionService.setDropdownsData('selectedAccountId', accountId ? accountId.toString() : '');\n    // this.sessionService.setDropdownsData('selectedCategoryId', categoryId ? categoryId.toString() : '');\n    // this.sessionService.setDropdownsData('selectedBWVId', bwvId ? bwvId : '');\n\n    console.log(this.$formdata());\n  }\n}\n", "<div *ngIf=\"isLoading\" class=\"p-4 d-flex align-items-center justify-content-center\">\n  <loader />\n</div>\n\n<div class=\"all-filters-modal-wrapper\" *ngIf=\"!isLoading\">\n  <div class=\"d-flex justify-content-between align-items-center\">\n    <h5 class=\"text-primary-jet\">All Filters</h5>\n    <div class=\"d-flex\">\n      <mat-icon class=\"text-primary-charcoal\" [mat-dialog-close]=\"false\">close</mat-icon>\n    </div>\n  </div>\n\n  <div class=\"filters-content\">\n    <!-- Row - 1 -->\n    <div class=\"filter-row\">\n      <date-picker\n        class=\"flex-grow-1\"\n        [fieldModel]=\"$formdata().date\"\n        fieldPlaceholder=\"Select date\"\n        (onDateSelectEvent)=\"handleDateChange($event)\"\n        tooltipText=\"Date\"\n      />\n\n      <select-simple-field\n        class=\"flex-grow-1\"\n        customClass=\"w-p-full\"\n        [fieldList]=\"organizationList\"\n        [(fieldModel)]=\"$formdata().organization\"\n        fieldPlaceholder=\"Organisation\"\n        (inputChangeEvent)=\"handleSingleSelectDrop('organization', $event)\"\n      />\n\n      <search-text-field class=\"flex-grow-1\" [(fieldModel)]=\"$formdata().eventId\" fieldPlaceholder=\"Event ID\" />\n\n      <select-simple-field\n        class=\"flex-grow-1\"\n        customClass=\"w-p-full\"\n        [fieldList]=\"accountList\"\n        [(fieldModel)]=\"$formdata().user\"\n        fieldPlaceholder=\"Account\"\n      />\n    </div>\n\n    <h5 class=\"text-primary-jet h6 mt-4 mb-3\">CUSTOM FIELDS</h5>\n\n    <!-- Row - 2 -->\n    <div class=\"filter-row\">\n      <search-text-field\n        class=\"flex-grow-1\"\n        [(fieldModel)]=\"$formdata().classification\"\n        fieldLabel=\"Classification\"\n        fieldPlaceholder=\"Enter classification\"\n      />\n\n      <search-text-field\n        class=\"flex-grow-1\"\n        [(fieldModel)]=\"$formdata().eventNumber\"\n        fieldLabel=\"Event Number\"\n        fieldPlaceholder=\"Enter event number\"\n      />\n\n      <search-text-field\n        class=\"flex-grow-1\"\n        [(fieldModel)]=\"$formdata().caseNumber\"\n        fieldLabel=\"Case Number\"\n        fieldPlaceholder=\"Enter case number\"\n      />\n\n      <search-text-field\n        class=\"flex-grow-1\"\n        [(fieldModel)]=\"$formdata().victimPOI\"\n        fieldLabel=\"Victim/POI\"\n        fieldPlaceholder=\"Enter Victim/POI\"\n      />\n\n      <search-text-field\n        class=\"flex-grow-1\"\n        [(fieldModel)]=\"$formdata().offence\"\n        fieldLabel=\"Offence\"\n        fieldPlaceholder=\"Enter offence\"\n      />\n    </div>\n\n    <!-- Row - 3 -->\n    <div class=\"filter-row row-filter-list mt-4\">\n      <div class=\"filter-lists\">\n        <div class=\"list-wrapper\">\n          <h6 class=\"text-common-dark mb-2 text-base\">Media Source</h6>\n          @for (item of mediaSourceList; track $index) {\n          <div\n            class=\"my-2 list-item\"\n            [class.selected]=\"$formdata().mediaSource.includes(item)\"\n            (click)=\"handleSingleSelectDrop('mediaSource', item)\"\n          >\n            <span>{{ item }}</span>\n            <mat-icon [class.invisible]=\"!$formdata().mediaSource.includes(item)\">close</mat-icon>\n          </div>\n          }\n        </div>\n\n        <div class=\"list-wrapper\" [class.disabled]=\"listDisabled.includes('In-car')\">\n          <h6 class=\"text-common-dark mb-2 text-base\">BWV Event</h6>\n          @for (item of bwvList; track $index) {\n          <div\n            class=\"my-2 list-item\"\n            [class.selected]=\"$formdata().bwvEvent.includes(item)\"\n            (click)=\"handleMultiSelectDrop('bwvEvent', item)\"\n          >\n            <span>{{ item }}</span>\n            <mat-icon [class.invisible]=\"!$formdata().bwvEvent.includes(item)\">close</mat-icon>\n          </div>\n          }\n        </div>\n\n        <div class=\"list-wrapper\">\n          <h6 class=\"text-common-dark mb-2 text-base\">Session Location</h6>\n          @for (item of sessionLocationList; track $index) {\n          <div\n            class=\"my-2 list-item\"\n            [class.selected]=\"$formdata().sessionLocation.includes(item)\"\n            (click)=\"handleMultiSelectDrop('sessionLocation', item)\"\n          >\n            <span>{{ item }}</span>\n            <mat-icon [class.invisible]=\"!$formdata().sessionLocation.includes(item)\">close</mat-icon>\n          </div>\n          }\n        </div>\n\n        <div class=\"list-wrapper\">\n          <h6 class=\"text-common-dark mb-2 text-base\">Session Filters</h6>\n          @for (item of sessionFiltersList; track $index) {\n          <div\n            class=\"my-2 list-item\"\n            [class.selected]=\"$formdata().sessionFilter.includes(item)\"\n            (click)=\"handleMultiSelectDrop('sessionFilter', item)\"\n          >\n            <span>{{ item }}</span>\n            <mat-icon [class.invisible]=\"!$formdata().sessionFilter.includes(item)\">close</mat-icon>\n          </div>\n          }\n        </div>\n\n        <div class=\"list-wrapper\" [class.disabled]=\"listDisabled.includes('Body worn')\">\n          <h6 class=\"text-common-dark mb-2 text-base\">In-car Video Events</h6>\n          <div class=\"icv-list\">\n            @for (item of icvList; track $index) {\n            <div\n              class=\"my-2 list-item\"\n              [class.selected]=\"$formdata().inCarVideo.includes(item)\"\n              (click)=\"handleMultiSelectDrop('inCarVideo', item)\"\n            >\n              <span>{{ item }}</span>\n              <mat-icon [class.invisible]=\"!$formdata().inCarVideo.includes(item)\">close</mat-icon>\n            </div>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Row - 4 -->\n    <div class=\"cta-wrapper d-flex justify-content-between align-items-center\">\n      <div class=\"d-flex align-items-center gap-4\">\n        <save-search [saveSearchList]=\"saveSearchList\" [disabled]=\"!canSaveAndReset\" />\n\n        <button class=\"btn reset-btn\" [disabled]=\"!canSaveAndReset\" (click)=\"resetFilters()\">\n          <svg viewBox=\"0 0 16 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M14.6673 8.4987C14.6673 12.1807 11.6827 15.1654 8.00065 15.1654C4.31865 15.1654 1.33398 12.1807 1.33398 8.4987C1.33398 4.8167 4.31865 1.83203 8.00065 1.83203V3.16536C6.72367 3.16551 5.48913 3.62383 4.52142 4.45702C3.55371 5.29021 2.91706 6.44296 2.7272 7.70575C2.53734 8.96853 2.80687 10.2575 3.4868 11.3384C4.16673 12.4193 5.21192 13.2204 6.4324 13.5961C7.65288 13.9717 8.96763 13.897 10.1377 13.3854C11.3077 12.8739 12.2554 11.9595 12.8085 10.8085C13.3615 9.65753 13.4832 8.3463 13.1515 7.11316C12.8197 5.88003 12.0566 4.80685 11.0007 4.0887V5.83203H9.66732V1.83203H13.6673V3.16536H12.0007C12.829 3.78599 13.5013 4.59114 13.9642 5.51692C14.4271 6.44271 14.6678 7.46364 14.6673 8.4987Z\"\n            />\n          </svg>\n        </button>\n      </div>\n\n      <button\n        class=\"btn bg-primary-web border-2 text-white\"\n        [mat-dialog-close]=\"isFormValid && true\"\n        [disabled]=\"!isFormValid\"\n        (click)=\"onSearch()\"\n      >\n        Search\n      </button>\n    </div>\n  </div>\n</div>\n", "import { Component, inject, output, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject, takeUntil } from 'rxjs';\n\nimport { UserSessionService } from 'src/app/core/session/user-session.service';\nimport { SessionData } from 'src/app/data/session.data';\n\nimport { SessionService } from 'src/app/modules/media/session/session.service';\nimport { SearchFormData, SearchService } from '../../search/search.service';\n\nimport { CategoryApiService, OrganizationApiService, SessionApiService, UserApiService } from 'src/app/api';\nimport { CategoriesModel, OrganizationModel, SessionSearchResponseModel, UserModel } from 'src/app/api/model/models';\n\nimport { AdvancedFilterComponent } from '../advanced-filter/advanced-filter.component';\nimport { DatePickerComponent } from 'src/app/modules/shared/components/date-picker/date-picker.component';\nimport { SelectSimpleFieldComponent } from 'src/app/modules/shared/components/select-simple-field/select-simple-field.component';\nimport { AddCaseComponent } from '../add-case/add-case.component';\n\n@Component({\n  selector: 'basic-filter',\n  standalone: false,\n  templateUrl: './basic-filter.component.html',\n  styleUrl: './basic-filter.component.scss'\n})\nexport class BasicFilterComponent {\n  private readonly dialog = inject(MatDialog);\n  private readonly datePipe = inject(DatePipe);\n  private readonly searchService = inject(SearchService);\n  private readonly sessionApiService = inject(SessionApiService);\n  private readonly userSession = inject(UserSessionService);\n  private readonly sessionService = inject(SessionService);\n  private readonly organizationApiService = inject(OrganizationApiService);\n  private readonly categoryApiService = inject(CategoryApiService);\n  private readonly userApiService = inject(UserApiService);\n\n  @ViewChild(DatePickerComponent) datePicker!: DatePickerComponent;\n  @ViewChildren(SelectSimpleFieldComponent) selectComponent!: QueryList<SelectSimpleFieldComponent>;\n\n  onSearchEvent = output<{\n    fromDate: Date;\n    toDate: Date;\n    searchInput: string;\n  }>();\n  onLoadingEvent = output<boolean>();\n\n  private destroy$: Subject<void> = new Subject<void>();\n  $formdata = this.searchService.formData;\n\n  organizationList: string[] = SessionData.organizationList;\n  organizationIdList: number[] = [-1]; // For company IDs\n\n  accountList: string[] = SessionData.accountList;\n  accountIdList: number[] = [-1]; // For account/user IDs\n\n  categoryList: string[] = SessionData.categoryList;\n  categoryIdList: number[] = [-1]; // For category IDs\n\n  loggedInUserId: number;\n  isLoading = false;\n  saveSearchList = ['string', 'next', 'after'];\n  searchResultText = '';\n\n  currentPage: number = 1;\n  itemsPerPage: number = 30;\n  isPaginationEnabled = false;\n\n  constructor() {\n    this.loggedInUserId = this.userSession.userId;\n  }\n\n  get canAddCase(): boolean {\n    return this.searchService.selectedSessions().length !== 0;\n  }\n\n  get isFirstSearch() {\n    return this.sessionService.isFirstSearch;\n  }\n\n  get isFormValid() {\n    const isValid =\n      this.$formdata().date !== '' &&\n      this.searchService.dateRange().start &&\n      this.searchService.dateRange().end &&\n      this.$formdata().user !== '';\n\n    return isValid;\n  }\n\n  get canSaveAndReset(): boolean {\n    return !this.searchService.isUnchanged();\n  }\n\n  get totalItems(): number {\n    return this.sessionService.totalSessionCount;\n  }\n\n  toggleAllFilters() {\n    const dialog = this.dialog.open(AdvancedFilterComponent, {\n      panelClass: 'all-filters-dialog',\n      disableClose: false\n    });\n\n    dialog.afterClosed().subscribe((result) => {\n      if (result) this.testFilterSessions();\n    });\n  }\n\n  toggleAddToCase() {\n    if (!this.canAddCase) return;\n\n    const dialog = this.dialog.open(AddCaseComponent, {\n      disableClose: false\n    });\n\n    dialog.afterClosed().subscribe((result) => {\n      if (result) console.log('Add case');\n    });\n  }\n\n  handleDateChange(data: { val: string; start: Date | undefined; end: Date | undefined }) {\n    this.searchService.updateFormData({\n      date: data.val\n    });\n\n    this.searchService.updateDateRange({ start: data.start, end: data.end });\n  }\n\n  handleMultiSelectDrop(key: keyof SearchFormData, data: string) {\n    const existing_list: string[] = this.$formdata()[key] as string[];\n\n    if (!existing_list.includes(data)) {\n      existing_list.push(data);\n    } else {\n      const index = existing_list.indexOf(data);\n      existing_list.splice(index, 1);\n    }\n\n    this.searchService.updateFormData({\n      [key]: existing_list\n    });\n  }\n\n  resetFilters() {\n    if (!this.canSaveAndReset) return;\n\n    this.searchService.resetForm('basic');\n    this.datePicker.resetFields();\n    this.selectComponent.forEach((comp) => comp.resetFields());\n  }\n\n  paginate(page_number: number) {\n    this.currentPage = page_number;\n    this.testFilterSessions();\n  }\n\n  filterSessions() {\n    const current_date = new Date();\n\n    const few_days_back = new Date(); // to get 7 days before\n    few_days_back.setDate(current_date.getDate() - 7);\n\n    this.isLoading = true;\n    this.onLoadingEvent.emit(this.isLoading);\n\n    this.sessionApiService\n      .apiMediaSearchGetFilterMediaSearch({\n        currentPageNo: 1,\n        itemsPerPage: 20,\n        searchMode: 'Basic',\n        userID: -1, // -1 for \"All\", 17134 || User ID is the Account\n        loggedInUserID: this.loggedInUserId,\n        combinedSearch: '',\n        from: few_days_back.toISOString(),\n        to: current_date.toISOString(),\n        includeExpired: true,\n        includeLiveSessions: true\n      })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response: SessionSearchResponseModel) => {\n          // Set session data\n          this.sessionService.totalSessionCount = response.TotalSessionsCount;\n          this.sessionService.sessionsList = response.SessionGroups;\n          this.sessionService.sessionExpandedList = [...new Array(response.SessionGroups.length).fill(false)];\n\n          // this.onSearchEvent.emit({\n          //   fromDate: this.selectedFromDate!,\n          //   toDate: this.selectedToDate!,\n          //   searchInput: this.$formdata().freeText\n          // });\n\n          // Set Loaders\n          this.isLoading = false;\n          this.onLoadingEvent.emit(this.isLoading);\n\n          // Reset form\n        },\n        error: (error: Error) => {\n          console.log('Session basic search API error: ', error);\n\n          this.isLoading = false;\n          this.onLoadingEvent.emit(this.isLoading);\n        }\n      });\n  }\n\n  testFilterSessions(firstSearch: boolean = false) {\n    this.isPaginationEnabled = false;\n    this.onLoadingEvent.emit(true);\n\n    if (firstSearch) {\n      setTimeout(() => {\n        this.sessionService.totalSessionCount = 4;\n        this.sessionService.sessionsList = SessionData.sessionList.SessionGroups.filter((session, i) => {\n          if (i < 4) return session;\n        });\n        this.sessionService.sessionExpandedList = new Array(4).fill(false);\n        this.onLoadingEvent.emit(false);\n\n        this.searchResultText = `\n          <span class=\"text-primary-charcoal fw-medium\">Last 7 days</span> of recordings\n        `;\n\n        this.isPaginationEnabled = true;\n      }, 1000);\n    } else {\n      setTimeout(() => {\n        this.sessionService.totalSessionCount = 20;\n        this.sessionService.sessionsList = SessionData.sessionList.SessionGroups;\n        this.sessionService.sessionExpandedList = new Array(20).fill(false);\n\n        this.onLoadingEvent.emit(false);\n\n        const selectedDate = this.$formdata().date;\n        switch (selectedDate) {\n          case 'Today':\n            this.searchResultText = `\n              <span class=\"text-primary-charcoal fw-medium\">Today's</span> recordings\n            `;\n            break;\n\n          case 'Yesterday':\n            this.searchResultText = `\n              <span class=\"text-primary-charcoal fw-medium\">Yesterday's</span> recordings\n            `;\n            break;\n\n          case 'Last 7 days':\n            this.searchResultText = `\n              <span class=\"text-primary-charcoal fw-medium\">Last 7 days</span> recordings\n            `;\n            break;\n\n          case 'Last 30 days':\n            this.searchResultText = `\n              <span class=\"text-primary-charcoal fw-medium\">Last 30 days</span> recordings\n            `;\n            break;\n\n          default:\n            const start = this.datePipe.transform(this.searchService.dateRange().start, 'dd MMMM y');\n            const end = this.datePipe.transform(this.searchService.dateRange().end, 'dd MMMM y');\n\n            this.searchResultText = `\n                Recordings from \n                  <span class=\"text-primary-charcoal fw-medium\">${start}</span>\n                to\n                  <span class=\"text-primary-charcoal fw-medium\">${end}</span> \n              `;\n            break;\n        }\n\n        this.isPaginationEnabled = true;\n      }, 1000);\n    }\n  }\n\n  ngOnInit() {\n    // * First search for last 7 days content\n    if (this.isFirstSearch) {\n      const then = new Date();\n      const now = new Date();\n      then.setDate(then.getDate() - 7);\n\n      this.searchService.updateDateRange({\n        start: then,\n        end: now\n      });\n      // this.filterSessions();\n    }\n\n    this.testFilterSessions(true);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n", "<div class=\"search-filters-wrapper\">\n  <div class=\"d-flex justify-content-between align-items-center search-top\">\n    <div class=\"d-flex align-items-center gap-3 flex-grow-1\">\n      <div class=\"search-input-container shadow-inner flex-grow-1\">\n        <input\n          type=\"text\"\n          [(ngModel)]=\"$formdata().freeText\"\n          class=\"search-input w-p-full text-primary-charcoal\"\n          placeholder=\"Search\"\n          matTooltip=\"Search by date range, Incidents, Last modified, Session Filters...\"\n          matTooltipClass=\"w-fit max-w-unset\"\n        />\n      </div>\n\n      <icon-button\n        customClass=\"bg-primary-blue text-white border-primary-blue\"\n        [disabled]=\"!isFormValid || isLoading\"\n        (clickEvent)=\"isFormValid && testFilterSessions()\"\n      >\n        <span class=\"me-2 lh-20\">Search</span>\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M21.7495 20.6929L16.0855 15.0289C17.4466 13.3949 18.1253 11.299 17.9805 9.17731C17.8356 7.05561 16.8784 5.07143 15.3079 3.63752C13.7374 2.20361 11.6745 1.43039 9.54844 1.4787C7.42236 1.52701 5.39674 2.39313 3.89298 3.89689C2.38922 5.40065 1.5231 7.42626 1.47479 9.55235C1.42648 11.6784 2.19971 13.7413 3.63361 15.3118C5.06752 16.8823 7.0517 17.8396 9.1734 17.9844C11.2951 18.1292 13.391 17.4505 15.025 16.0894L20.689 21.7534L21.7495 20.6929ZM2.99948 9.75338C2.99948 8.41836 3.39536 7.11332 4.13706 6.00328C4.87876 4.89325 5.93296 4.02809 7.16636 3.5172C8.39976 3.0063 9.75696 2.87263 11.0663 3.13308C12.3757 3.39353 13.5784 4.03641 14.5224 4.98041C15.4665 5.92442 16.1093 7.12715 16.3698 8.43652C16.6302 9.74589 16.4966 11.1031 15.9857 12.3365C15.4748 13.5699 14.6096 14.6241 13.4996 15.3658C12.3895 16.1075 11.0845 16.5034 9.74948 16.5034C7.95987 16.5014 6.24414 15.7896 4.9787 14.5242C3.71326 13.2587 3.00146 11.543 2.99948 9.75338Z\"\n            fill=\"#ffffff\"\n          />\n        </svg>\n      </icon-button>\n\n      <div class=\"save-search-wrapper d-flex align-items-center gap-1\">\n        <save-search [saveSearchList]=\"saveSearchList\" [disabled]=\"!canSaveAndReset\" customClass=\"drop-right\" />\n      </div>\n\n      <button class=\"btn reset-btn\" [disabled]=\"!canSaveAndReset\" (click)=\"resetFilters()\">\n        <svg viewBox=\"0 0 16 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M14.6673 8.4987C14.6673 12.1807 11.6827 15.1654 8.00065 15.1654C4.31865 15.1654 1.33398 12.1807 1.33398 8.4987C1.33398 4.8167 4.31865 1.83203 8.00065 1.83203V3.16536C6.72367 3.16551 5.48913 3.62383 4.52142 4.45702C3.55371 5.29021 2.91706 6.44296 2.7272 7.70575C2.53734 8.96853 2.80687 10.2575 3.4868 11.3384C4.16673 12.4193 5.21192 13.2204 6.4324 13.5961C7.65288 13.9717 8.96763 13.897 10.1377 13.3854C11.3077 12.8739 12.2554 11.9595 12.8085 10.8085C13.3615 9.65753 13.4832 8.3463 13.1515 7.11316C12.8197 5.88003 12.0566 4.80685 11.0007 4.0887V5.83203H9.66732V1.83203H13.6673V3.16536H12.0007C12.829 3.78599 13.5013 4.59114 13.9642 5.51692C14.4271 6.44271 14.6678 7.46364 14.6673 8.4987Z\"\n          />\n        </svg>\n      </button>\n    </div>\n\n    <div class=\"d-flex align-items-center gap-2\">\n      <icon-button\n        customClass=\"border-1 text-white bg-primary-blue border-primary-blue\"\n        [disabled]=\"!canAddCase\"\n        (clickEvent)=\"toggleAddToCase()\"\n      >\n        <svg width=\"20\" height=\"19\" viewBox=\"0 0 17 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M6.91699 9.33333H8.25033M8.25033 9.33333H9.58366M8.25033 9.33333V10.6667M8.25033 9.33333V8\"\n            stroke=\"white\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M14.9163 7.86396C14.9163 6.10906 14.9163 5.2316 14.4033 4.66125C14.3562 4.60879 14.3063 4.55886 14.2538 4.51167C13.6834 3.9987 12.806 3.9987 11.0511 3.9987H10.8019C10.0328 3.9987 9.64827 3.9987 9.28994 3.89655C9.09307 3.84043 8.90327 3.76184 8.72441 3.66232C8.39881 3.48114 8.12687 3.20922 7.58301 2.66536L7.21614 2.29853C7.03387 2.11625 6.94274 2.0251 6.84697 1.9457C6.43402 1.60339 5.92744 1.39356 5.39339 1.34362C5.26951 1.33203 5.14062 1.33203 4.88284 1.33203C4.29449 1.33203 4.00031 1.33203 3.75527 1.37826C2.67655 1.58179 1.83277 2.42557 1.62924 3.50429C1.58301 3.74933 1.58301 4.04351 1.58301 4.63186M14.9105 10.6654C14.8866 12.3184 14.764 13.2556 14.1353 13.8843C13.3543 14.6654 12.0971 14.6654 9.58301 14.6654H6.91634C4.40218 14.6654 3.14511 14.6654 2.36405 13.8843C1.58301 13.1033 1.58301 11.8462 1.58301 9.33203V7.33203\"\n            stroke=\"white\"\n            stroke-linecap=\"round\"\n          />\n        </svg>\n        <span class=\"ms-2\">Add to Case</span>\n      </icon-button>\n    </div>\n  </div>\n\n  <div class=\"d-flex align-items-center mt-2 gap-2 search-bottom w-p-90\">\n    <date-picker\n      [fieldModel]=\"$formdata().date\"\n      fieldPlaceholder=\"Select date\"\n      (onDateSelectEvent)=\"handleDateChange($event)\"\n      tooltipText=\"Date\"\n    />\n\n    <select-simple-field\n      [fieldList]=\"accountList\"\n      [(fieldModel)]=\"$formdata().user\"\n      fieldPlaceholder=\"Account\"\n      tooltipText=\"Account\"\n    />\n\n    <select-simple-field\n      [fieldList]=\"categoryList\"\n      [listToCheck]=\"$formdata().mediaCategory\"\n      listType=\"check\"\n      fieldPlaceholder=\"Media Category\"\n      (inputChangeEvent)=\"handleMultiSelectDrop('mediaCategory', $event)\"\n      tooltipText=\"Media category\"\n    />\n\n    <icon-button buttonTitle=\"All Filters\" (clickEvent)=\"toggleAllFilters()\">\n      <span class=\"me-2\">All Filters</span>\n\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M3.55566 4.10938H10.2223\" stroke=\"#4487f3\" stroke-linecap=\"round\" />\n        <path d=\"M3.55566 8H6.889\" stroke=\"#4487f3\" stroke-linecap=\"round\" />\n        <path d=\"M9.11035 8H12.4437\" stroke=\"#4487f3\" stroke-linecap=\"round\" />\n        <path d=\"M5.77734 11.8867H12.444\" stroke=\"#4487f3\" stroke-linecap=\"round\" />\n        <path\n          d=\"M11.3328 5.22222C11.9464 5.22222 12.4439 4.72476 12.4439 4.11111C12.4439 3.49746 11.9464 3 11.3328 3C10.7191 3 10.2217 3.49746 10.2217 4.11111C10.2217 4.72476 10.7191 5.22222 11.3328 5.22222Z\"\n          stroke=\"#4487f3\"\n          stroke-linecap=\"round\"\n        />\n        <path\n          d=\"M7.99978 9.10894C8.61343 9.10894 9.11089 8.61148 9.11089 7.99783C9.11089 7.38418 8.61343 6.88672 7.99978 6.88672C7.38613 6.88672 6.88867 7.38418 6.88867 7.99783C6.88867 8.61148 7.38613 9.10894 7.99978 9.10894Z\"\n          stroke=\"#4487f3\"\n          stroke-linecap=\"round\"\n        />\n        <path\n          d=\"M4.66678 12.9996C5.28042 12.9996 5.77789 12.5021 5.77789 11.8885C5.77789 11.2748 5.28042 10.7773 4.66678 10.7773C4.05313 10.7773 3.55566 11.2748 3.55566 11.8885C3.55566 12.5021 4.05313 12.9996 4.66678 12.9996Z\"\n          stroke=\"#4487f3\"\n          stroke-linecap=\"round\"\n        />\n      </svg>\n    </icon-button>\n  </div>\n\n  <div class=\"d-flex align-items-center justify-content-between\">\n    <div class=\"search-result-text\" [innerHTML]=\"searchResultText\"></div>\n\n    @if (isPaginationEnabled) {\n    <pagination\n      [currentPage]=\"currentPage\"\n      [itemsPerPage]=\"itemsPerPage\"\n      [totalItems]=\"totalItems\"\n      (onPageChangeEvent)=\"paginate($event)\"\n    />\n    }\n  </div>\n</div>\n", "import { Component, inject, input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { FileLocationNamesTypes, SessionConstants } from 'src/app/constants/session-constants';\nimport { SessionGroupsModel, SessionPhotoModel, SessionRecordingModel } from 'src/app/api/model/models';\n\nimport { DetailsService } from '../../details/details.service';\nimport { CalculationHelpers } from 'src/app/modules/shared/helpers/calculations';\n\n@Component({\n  selector: 'file-card',\n  standalone: false,\n  templateUrl: './file-card.component.html',\n  styleUrl: './file-card.component.scss'\n})\nexport class FileCardComponent {\n  private readonly router = inject(Router);\n  private readonly detailsService = inject(DetailsService);\n  private readonly calculationHelpers = inject(CalculationHelpers);\n\n  $filetype = input.required<string>({ alias: 'filetype' });\n  $session = input.required<SessionGroupsModel>({ alias: 'session' });\n  $recFile = input<SessionRecordingModel>(undefined, { alias: 'recFile' });\n  $photoFile = input<SessionPhotoModel>(undefined, { alias: 'photoFile' });\n\n  fileLocationNames = SessionConstants.fileLocationNames;\n  fileLocations = SessionConstants.fileLocations;\n\n  constructor() {}\n\n  // * Check if file can be shown for image & rec file type\n  get fileNotExists(): boolean {\n    let notExists: boolean;\n\n    if (this.$filetype().includes('photo')) {\n      notExists =\n        this.fileLocations.central !== this.$photoFile()!.fileLocation &&\n        this.fileLocations.dock !== this.$photoFile()!.fileLocation;\n    } else {\n      notExists =\n        this.fileLocations.central !== this.$recFile()!.fileLocation &&\n        this.fileLocations.dock !== this.$recFile()!.fileLocation;\n    }\n\n    return notExists;\n  }\n\n  // * Checking if the file is \"redaction in progress\"\n  get redactionInProgress(): boolean {\n    let inProgress: boolean;\n\n    if (this.$filetype().includes('photo')) {\n      // ! Redaction does not apply for image files\n      inProgress = false;\n    } else {\n      inProgress =\n        this.$recFile()!['<RedactedStatus>k__BackingField'] !== -1 &&\n        this.$recFile()!['<RedactedStatus>k__BackingField'] !== 11 &&\n        this.$recFile()!['<RedactedStatus>k__BackingField'] !== 13;\n    }\n\n    return inProgress;\n  }\n\n  // * Failed redacted file should not be displayed in UI\n  get cantShowFile(): boolean {\n    let cantShow: boolean;\n\n    if (this.$filetype().includes('photo')) {\n      cantShow = false;\n    } else {\n      cantShow = this.$recFile()!['<RedactedStatus>k__BackingField'] === 11;\n    }\n\n    return cantShow;\n  }\n\n  get duration(): string {\n    const start: any = new Date(this.$recFile()!.startiTme);\n    const end: any = new Date(this.$recFile()!.finishTime);\n\n    const diff = end.getTime() - start.getTime();\n    const calculated_time = this.calculationHelpers.secondsToTime(diff / 1000);\n\n    // const final_time = this.calculationHelpers.timeToWords(calculated_time);\n    return calculated_time;\n  }\n\n  get fileLocation(): string {\n    return this.fileLocationNames[\n      this.$filetype().includes('photo')\n        ? (this.$photoFile()!.fileLocation as FileLocationNamesTypes)\n        : (this.$recFile()!.fileLocation as FileLocationNamesTypes)\n    ];\n  }\n\n  get cameraModel(): string {\n    return this.$filetype().includes('photo')\n      ? this.$photoFile()!['<CameraAssetTag>k__BackingField']\n      : this.$recFile()!.cameraAssetTag;\n  }\n\n  get fileType(): string {\n    let type: string;\n\n    if (this.$filetype().includes('photo')) type = 'Image';\n    else {\n      // * Multiple checks for\n      //   * Redacted, Redaction in progress, Review Redaction\n      //   * Beeped, Clipped\n      //   * Pre-record\n      //   * Normal Audio & Video file\n\n      // TODO: Pre record and clipping conditions to be modified\n      const copyOf = this.$recFile()!['<CopyOf>k__BackingField'];\n      const isOriginalFile: boolean = copyOf < 0 ? true : false; // ! Original files have \"<CopyOf>\" parameter in negative values (-214673453)\n\n      let isClipped: boolean = false;\n\n      // * Condition false for original file\n      if (!isOriginalFile) {\n        const originalFile: SessionRecordingModel = this.$session()._recordings.filter(\n          (rec) => rec['<CopyOf>k__BackingField']! < 0\n        )[0];\n\n        // * Check if the current file has start and end time as same as of original file\n        if (\n          originalFile.startiTme !== this.$recFile()!.startiTme &&\n          originalFile.finishTime !== this.$recFile()!.finishTime\n        )\n          isClipped = true;\n      }\n\n      if (this.$recFile()!['<RedactedStatus>k__BackingField'] === 13) {\n        type = 'Redacted';\n      } else if (this.$recFile()!['<RedactedStatus>k__BackingField'] === 4) {\n        type = 'Review Redaction';\n      } else if (\n        this.$recFile()!['<RedactedStatus>k__BackingField'] !== -1 &&\n        this.$recFile()!['<RedactedStatus>k__BackingField'] !== 11\n      ) {\n        type = 'Redaction in progress';\n      } else if (this.$recFile()!['<BeepingInterval>k__BackingField'] !== '') {\n        type = 'Beeped';\n      } else if (isClipped) {\n        type = 'Clipped';\n      } else if (this.$session()._containsPrerecord) {\n        type = 'Pre-record enabled video';\n      } else if (this.$filetype().includes('audio')) {\n        type = 'Audio';\n      } else {\n        type = 'Video';\n      }\n    }\n\n    return type;\n  }\n\n  routeToDetails() {\n    if (this.redactionInProgress) return;\n\n    const fid = this.$filetype().includes('photo')\n      ? this.$photoFile()!.uniqueFileName\n      : this.$recFile()!.uniqueFileName;\n\n    // this.sessionService.sessionExpandedList = new Array(this.sessionService.sessionExpandedList.length).fill(false);\n    this.router.navigate(['/AngularSession.aspx/details']);\n\n    this.detailsService.updateCurrentSelection({\n      session_id: this.$session()._session_id,\n      file_id: fid,\n      file_type: this.$filetype()\n    });\n  }\n}\n", "<div\n  class=\"file-card pointer\"\n  [class.file-not-exists]=\"fileNotExists\"\n  [class.redaction-progress]=\"redactionInProgress\"\n  *ngIf=\"!cantShowFile\"\n  (click)=\"routeToDetails()\"\n>\n  <div class=\"d-flex align-items-center\">\n    <div class=\"file-type-icon flex-shrink-0\">\n      <!-- * Icon for \"Redacted\" -->\n      @if (fileType.includes('Redacted')) {\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#CBEEFB\" />\n        <path\n          d=\"M5.76287 12.7383C6.30633 12.5315 6.83964 12.3178 7.38227 12.1284C7.64219 12.0376 7.72243 11.8232 7.74821 11.581C7.7647 11.4262 7.74121 11.2836 7.64788 11.1402C7.40918 10.7733 7.20742 10.3855 7.09818 9.95757C7.08888 9.92116 7.06938 9.8921 7.03539 9.87399C6.81702 9.75766 6.70027 9.5602 6.61523 9.34242C6.44718 8.91208 6.3891 8.46622 6.44945 8.00783C6.47141 7.8411 6.55446 7.7093 6.7141 7.63747C6.76067 7.61651 6.77483 7.58739 6.77374 7.54023C6.76734 7.26537 6.7829 6.99096 6.81136 6.71805C6.89223 5.94273 7.19435 5.27545 7.8043 4.763C8.29414 4.35146 8.86405 4.12236 9.49611 4.03764C10.3057 3.92913 11.0738 4.05095 11.786 4.4589C12.5379 4.88956 12.9687 5.54602 13.1351 6.38058C13.2094 6.7532 13.2266 7.13187 13.2264 7.51098C13.2264 7.58043 13.2392 7.62317 13.3132 7.65465C13.5058 7.73668 13.5557 7.91714 13.5676 8.0976C13.5974 8.55247 13.5379 8.99672 13.3529 9.41869C13.2748 9.59685 13.1724 9.75711 12.9944 9.85533C12.9521 9.87868 12.9303 9.91399 12.9171 9.95998C12.7875 10.4092 12.5873 10.8242 12.3111 11.2038C12.2238 11.3237 12.2489 11.4671 12.2555 11.6031C12.2581 11.6559 12.2741 11.7087 12.2891 11.7601C12.3409 11.937 12.447 12.0606 12.6268 12.1285C13.3163 12.3888 14.0041 12.6536 14.6914 12.9196C14.9103 13.0043 15.1239 13.1012 15.3312 13.2122C15.934 13.535 16.2934 14.0254 16.3947 14.7014C16.4394 14.9992 16.4836 15.2963 16.4856 15.5982C16.4859 15.6456 16.4995 15.6929 16.5 15.7403C16.5016 15.894 16.4048 15.9905 16.2473 15.9963C16.1093 16.0014 16.0054 15.9032 16.0032 15.7537C16.0006 15.5716 16.0006 15.3896 15.9838 15.2079C15.9575 14.9227 15.924 14.6397 15.8219 14.3683C15.6715 13.9687 15.3719 13.7212 14.9915 13.5533C14.4464 13.3126 13.8862 13.1095 13.3303 12.8957C13.1591 12.8299 12.9866 12.7672 12.8153 12.7018C12.7688 12.6841 12.7388 12.6841 12.7188 12.7404C12.5478 13.2214 12.1898 13.5376 11.7615 13.7853C11.3609 14.0169 10.924 14.1523 10.4644 14.199C9.67443 14.2792 8.91314 14.181 8.21274 13.7818C7.82906 13.5632 7.50878 13.2797 7.32523 12.868C7.3228 12.8626 7.32005 12.8572 7.3177 12.8517C7.24643 12.685 7.24619 12.6843 7.06996 12.7507C6.42256 12.9946 5.77254 13.2318 5.13417 13.4987C5.00895 13.5511 4.88806 13.6107 4.76971 13.6767C4.37394 13.8972 4.17868 14.2522 4.09128 14.6761C4.01815 15.0308 3.99722 15.3909 3.99916 15.7525C3.99988 15.8869 3.93015 15.9815 3.82244 15.9962C3.67145 16.0168 3.55717 15.9528 3.51657 15.8211C3.50532 15.7846 3.49838 15.7445 3.50033 15.7066C3.52378 15.251 3.55755 14.7964 3.68342 14.3546C3.82321 13.8639 4.14709 13.5191 4.57679 13.2611C4.9163 13.0572 5.28877 12.9248 5.65505 12.7792C5.6886 12.7659 5.72243 12.7533 5.76287 12.7383ZM12.7271 7.73102C12.7329 7.59676 12.7511 7.46162 12.7417 7.32843C12.7218 7.04934 12.7229 6.76907 12.6743 6.49132C12.5802 5.95318 12.3411 5.49208 11.9248 5.13687C11.3471 4.644 10.6534 4.45797 9.90571 4.47023C9.53217 4.47635 9.16463 4.55569 8.81613 4.69787C8.43785 4.8522 8.09844 5.06557 7.83402 5.3803C7.43374 5.85676 7.28562 6.41995 7.27511 7.02681C7.27046 7.29574 7.27494 7.56481 7.2741 7.83382C7.27364 7.97989 7.21805 8.03932 7.07345 8.0538C7.04347 8.05681 7.01367 8.0648 6.98379 8.0648C6.91286 8.0648 6.89199 8.10004 6.89285 8.16662C6.89488 8.32477 6.89209 8.48266 6.91139 8.64045C6.94187 8.88953 7.00426 9.12616 7.15465 9.33361C7.1857 9.37644 7.22213 9.41182 7.27206 9.42773C7.43689 9.48028 7.51209 9.59802 7.54798 9.7604C7.66669 10.2974 7.91584 10.7674 8.29858 11.1678C8.70235 11.5902 9.18471 11.8664 9.77345 11.9267C10.2384 11.9743 10.6803 11.873 11.0844 11.6414C11.7773 11.2444 12.1949 10.6338 12.4347 9.89075C12.4667 9.79136 12.5024 9.69309 12.5353 9.59396C12.5534 9.5393 12.5864 9.49493 12.6422 9.48094C12.8301 9.43385 12.9072 9.2912 12.9668 9.12845C13.0783 8.82397 13.1091 8.50829 13.1069 8.1875C13.1061 8.07631 13.092 8.06158 12.9775 8.05291C12.9595 8.05154 12.9413 8.05238 12.9232 8.05168C12.7936 8.04668 12.7303 7.984 12.7267 7.85627C12.7257 7.82043 12.7268 7.78453 12.7271 7.73102ZM8.50395 11.9424C8.41409 11.8741 8.32423 11.8059 8.23004 11.7344C8.22075 11.7471 8.21346 11.7535 8.21077 11.7615C8.20414 11.7811 8.19996 11.8014 8.1942 11.8213C8.13106 12.0391 8.05094 12.2474 7.85675 12.3883C7.69555 12.5052 7.69467 12.5049 7.78812 12.6872C7.80853 12.727 7.83189 12.7655 7.8567 12.8028C8.04297 13.0828 8.30444 13.2776 8.60093 13.4258C9.20751 13.7291 9.85042 13.822 10.5207 13.7225C10.9683 13.656 11.3802 13.4984 11.7443 13.2264C11.9701 13.0578 12.1462 12.8505 12.2629 12.5938C12.2978 12.517 12.3029 12.4601 12.2077 12.4252C12.1509 12.4045 12.1061 12.3622 12.0647 12.3179C11.9344 12.1783 11.858 12.0123 11.8155 11.8285C11.7945 11.7375 11.7764 11.7306 11.714 11.7828C11.289 12.1385 10.7961 12.3396 10.2453 12.3878C9.61959 12.4427 9.03646 12.3093 8.50395 11.9424Z\"\n          fill=\"#4D7DBF\"\n        />\n        <path\n          d=\"M10.0725 9.02638C10.1659 9.02647 10.2503 9.02356 10.3345 9.02733C10.4618 9.03303 10.5117 9.08722 10.5119 9.21382C10.512 9.39887 10.5123 9.58392 10.5108 9.76896C10.5095 9.92909 10.4672 9.97032 10.3091 9.97042C10.0923 9.97056 9.87552 9.97128 9.65872 9.97031C9.5373 9.96977 9.48874 9.92197 9.48802 9.80202C9.48684 9.60802 9.48738 9.41401 9.48781 9.22001C9.48813 9.07754 9.53689 9.02869 9.68409 9.02669C9.81053 9.02497 9.93703 9.02636 10.0725 9.02638Z\"\n          fill=\"#4D7DBF\"\n        />\n        <path\n          d=\"M9.98224 7.71742C10.1088 7.71743 10.2263 7.71608 10.3437 7.71784C10.4544 7.71949 10.4943 7.7606 10.4947 7.87147C10.4954 8.08046 10.4954 8.28945 10.4946 8.49844C10.4941 8.61123 10.461 8.65528 10.3477 8.65817C10.1099 8.66423 9.87184 8.66311 9.63399 8.65901C9.54897 8.65755 9.48959 8.59015 9.48882 8.5056C9.48686 8.29066 9.48668 8.07567 9.489 7.86073C9.48998 7.77003 9.54318 7.72058 9.63886 7.71824C9.75025 7.71552 9.86175 7.71749 9.98224 7.71742Z\"\n          fill=\"#4D7DBF\"\n        />\n        <path\n          d=\"M10.1271 7.31629C9.96749 7.31634 9.81695 7.31737 9.66643 7.31608C9.54461 7.31503 9.48903 7.2611 9.48823 7.1417C9.48688 6.94177 9.48707 6.74183 9.48837 6.5419C9.48914 6.42492 9.5401 6.3736 9.66035 6.37255C9.88313 6.37061 10.1059 6.3706 10.3287 6.37255C10.4577 6.37367 10.4949 6.41315 10.4951 6.5395C10.4953 6.74838 10.4954 6.95727 10.4947 7.16616C10.4943 7.2807 10.4594 7.31479 10.3438 7.31596C10.2746 7.31666 10.2053 7.31621 10.1271 7.31629Z\"\n          fill=\"#4D7DBF\"\n        />\n        <path\n          d=\"M10.8633 7.12818C10.8634 6.92229 10.8631 6.72505 10.8636 6.52782C10.8638 6.41178 10.89 6.38181 11.0122 6.37422C11.1023 6.36862 11.193 6.37228 11.2834 6.37216C11.4161 6.37198 11.5488 6.37023 11.6814 6.37266C11.8074 6.37497 11.8484 6.41697 11.8491 6.54268C11.8501 6.74286 11.8504 6.94307 11.848 7.14323C11.8464 7.28267 11.8098 7.31592 11.6686 7.3162C11.4606 7.31659 11.2526 7.31669 11.0446 7.31661C10.8807 7.31654 10.8638 7.29952 10.8633 7.12818Z\"\n          fill=\"#4D7DBF\"\n        />\n        <path\n          d=\"M10.8626 9.62397C10.8627 9.46864 10.8621 9.32227 10.8629 9.1759C10.8635 9.0747 10.8908 9.03414 10.9931 9.03145C11.237 9.02504 11.4812 9.02717 11.7252 9.03086C11.8099 9.03215 11.8469 9.09365 11.8475 9.17004C11.8492 9.39102 11.8498 9.61213 11.8439 9.83301C11.841 9.94011 11.8039 9.97024 11.6971 9.97096C11.462 9.97252 11.2269 9.97253 10.9919 9.97132C10.8977 9.97084 10.8648 9.93547 10.863 9.83904C10.8617 9.77035 10.8627 9.70163 10.8626 9.62397Z\"\n          fill=\"#4D7DBF\"\n        />\n        <path\n          d=\"M8.71562 9.0284C8.81194 9.02846 8.89933 9.0259 8.98649 9.02918C9.09308 9.0332 9.13748 9.08046 9.13779 9.18672C9.13838 9.39555 9.13821 9.60439 9.13686 9.81322C9.1361 9.93105 9.09886 9.97015 8.98035 9.97128C8.75765 9.97343 8.53489 9.97347 8.31218 9.97155C8.19665 9.97055 8.15005 9.92184 8.14929 9.80485C8.14795 9.59901 8.14839 9.39316 8.14926 9.18731C8.14972 9.07823 8.19571 9.03102 8.3093 9.02867C8.44167 9.02594 8.57415 9.02825 8.71562 9.0284Z\"\n          fill=\"#4D7DBF\"\n        />\n        <path\n          d=\"M11.7768 7.72644C11.8423 7.76038 11.8442 7.81901 11.8451 7.87041C11.8488 8.07625 11.8505 8.28227 11.8457 8.48806C11.8425 8.62424 11.7997 8.65981 11.6607 8.66049C11.4499 8.66151 11.2391 8.66157 11.0283 8.66036C10.8957 8.6596 10.8628 8.62609 10.8626 8.49639C10.8623 8.28747 10.8621 8.07855 10.8627 7.86964C10.8631 7.75516 10.8994 7.7165 11.0117 7.7168C11.2644 7.71746 11.5171 7.72056 11.7768 7.72644Z\"\n          fill=\"#4D7DBF\"\n        />\n        <path\n          d=\"M8.60739 7.31634C8.50787 7.3163 8.41739 7.31726 8.32694 7.31599C8.20161 7.31424 8.14964 7.26389 8.14911 7.14273C8.14826 6.94545 8.14812 6.74817 8.14925 6.55089C8.14995 6.42928 8.20395 6.37337 8.32451 6.37242C8.53861 6.37075 8.75275 6.37047 8.96684 6.37266C9.09591 6.37398 9.13807 6.41948 9.13812 6.54679C9.1382 6.74706 9.1392 6.94733 9.13771 7.14758C9.13678 7.27199 9.09219 7.31522 8.96927 7.31597C8.85166 7.31668 8.73405 7.31626 8.60739 7.31634Z\"\n          fill=\"#4D7DBF\"\n        />\n        <path\n          d=\"M9.13391 7.8073C9.13674 8.04206 9.13924 8.26916 9.13745 8.49623C9.13656 8.60927 9.08437 8.6598 8.96901 8.66099C8.75498 8.66321 8.54088 8.66314 8.32684 8.66092C8.21023 8.6597 8.15 8.59734 8.14933 8.48149C8.14816 8.27829 8.14809 8.07507 8.14942 7.87187C8.1501 7.76824 8.19984 7.71857 8.30534 7.71783C8.53145 7.71626 8.75758 7.71805 8.9837 7.7168C9.05054 7.71643 9.1003 7.74061 9.13391 7.8073Z\"\n          fill=\"#4D7DBF\"\n        />\n      </svg>\n      }\n\n      <!-- * Icon for \"Review Redaction\" -->\n      @else if (fileType.includes('Review')) {\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#E9FCE0FF\" />\n        <path\n          d=\"M5.76287 12.7383C6.30633 12.5315 6.83964 12.3178 7.38227 12.1284C7.64219 12.0376 7.72243 11.8232 7.74821 11.581C7.7647 11.4262 7.74121 11.2836 7.64788 11.1402C7.40918 10.7733 7.20742 10.3855 7.09818 9.95757C7.08888 9.92116 7.06938 9.8921 7.03539 9.87399C6.81702 9.75766 6.70027 9.5602 6.61523 9.34242C6.44718 8.91208 6.3891 8.46622 6.44945 8.00783C6.47141 7.8411 6.55446 7.7093 6.7141 7.63747C6.76067 7.61651 6.77483 7.58739 6.77374 7.54023C6.76734 7.26537 6.7829 6.99096 6.81136 6.71805C6.89223 5.94273 7.19435 5.27545 7.8043 4.763C8.29414 4.35146 8.86405 4.12236 9.49611 4.03764C10.3057 3.92913 11.0738 4.05095 11.786 4.4589C12.5379 4.88956 12.9687 5.54602 13.1351 6.38058C13.2094 6.7532 13.2266 7.13187 13.2264 7.51098C13.2264 7.58043 13.2392 7.62317 13.3132 7.65465C13.5058 7.73668 13.5557 7.91714 13.5676 8.0976C13.5974 8.55247 13.5379 8.99672 13.3529 9.41869C13.2748 9.59685 13.1724 9.75711 12.9944 9.85533C12.9521 9.87868 12.9303 9.91399 12.9171 9.95998C12.7875 10.4092 12.5873 10.8242 12.3111 11.2038C12.2238 11.3237 12.2489 11.4671 12.2555 11.6031C12.2581 11.6559 12.2741 11.7087 12.2891 11.7601C12.3409 11.937 12.447 12.0606 12.6268 12.1285C13.3163 12.3888 14.0041 12.6536 14.6914 12.9196C14.9103 13.0043 15.1239 13.1012 15.3312 13.2122C15.934 13.535 16.2934 14.0254 16.3947 14.7014C16.4394 14.9992 16.4836 15.2963 16.4856 15.5982C16.4859 15.6456 16.4995 15.6929 16.5 15.7403C16.5016 15.894 16.4048 15.9905 16.2473 15.9963C16.1093 16.0014 16.0054 15.9032 16.0032 15.7537C16.0006 15.5716 16.0006 15.3896 15.9838 15.2079C15.9575 14.9227 15.924 14.6397 15.8219 14.3683C15.6715 13.9687 15.3719 13.7212 14.9915 13.5533C14.4464 13.3126 13.8862 13.1095 13.3303 12.8957C13.1591 12.8299 12.9866 12.7672 12.8153 12.7018C12.7688 12.6841 12.7388 12.6841 12.7188 12.7404C12.5478 13.2214 12.1898 13.5376 11.7615 13.7853C11.3609 14.0169 10.924 14.1523 10.4644 14.199C9.67443 14.2792 8.91314 14.181 8.21274 13.7818C7.82906 13.5632 7.50878 13.2797 7.32523 12.868C7.3228 12.8626 7.32005 12.8572 7.3177 12.8517C7.24643 12.685 7.24619 12.6843 7.06996 12.7507C6.42256 12.9946 5.77254 13.2318 5.13417 13.4987C5.00895 13.5511 4.88806 13.6107 4.76971 13.6767C4.37394 13.8972 4.17868 14.2522 4.09128 14.6761C4.01815 15.0308 3.99722 15.3909 3.99916 15.7525C3.99988 15.8869 3.93015 15.9815 3.82244 15.9962C3.67145 16.0168 3.55717 15.9528 3.51657 15.8211C3.50532 15.7846 3.49838 15.7445 3.50033 15.7066C3.52378 15.251 3.55755 14.7964 3.68342 14.3546C3.82321 13.8639 4.14709 13.5191 4.57679 13.2611C4.9163 13.0572 5.28877 12.9248 5.65505 12.7792C5.6886 12.7659 5.72243 12.7533 5.76287 12.7383ZM12.7271 7.73102C12.7329 7.59676 12.7511 7.46162 12.7417 7.32843C12.7218 7.04934 12.7229 6.76907 12.6743 6.49132C12.5802 5.95318 12.3411 5.49208 11.9248 5.13687C11.3471 4.644 10.6534 4.45797 9.90571 4.47023C9.53217 4.47635 9.16463 4.55569 8.81613 4.69787C8.43785 4.8522 8.09844 5.06557 7.83402 5.3803C7.43374 5.85676 7.28562 6.41995 7.27511 7.02681C7.27046 7.29574 7.27494 7.56481 7.2741 7.83382C7.27364 7.97989 7.21805 8.03932 7.07345 8.0538C7.04347 8.05681 7.01367 8.0648 6.98379 8.0648C6.91286 8.0648 6.89199 8.10004 6.89285 8.16662C6.89488 8.32477 6.89209 8.48266 6.91139 8.64045C6.94187 8.88953 7.00426 9.12616 7.15465 9.33361C7.1857 9.37644 7.22213 9.41182 7.27206 9.42773C7.43689 9.48028 7.51209 9.59802 7.54798 9.7604C7.66669 10.2974 7.91584 10.7674 8.29858 11.1678C8.70235 11.5902 9.18471 11.8664 9.77345 11.9267C10.2384 11.9743 10.6803 11.873 11.0844 11.6414C11.7773 11.2444 12.1949 10.6338 12.4347 9.89075C12.4667 9.79136 12.5024 9.69309 12.5353 9.59396C12.5534 9.5393 12.5864 9.49493 12.6422 9.48094C12.8301 9.43385 12.9072 9.2912 12.9668 9.12845C13.0783 8.82397 13.1091 8.50829 13.1069 8.1875C13.1061 8.07631 13.092 8.06158 12.9775 8.05291C12.9595 8.05154 12.9413 8.05238 12.9232 8.05168C12.7936 8.04668 12.7303 7.984 12.7267 7.85627C12.7257 7.82043 12.7268 7.78453 12.7271 7.73102ZM8.50395 11.9424C8.41409 11.8741 8.32423 11.8059 8.23004 11.7344C8.22075 11.7471 8.21346 11.7535 8.21077 11.7615C8.20414 11.7811 8.19996 11.8014 8.1942 11.8213C8.13106 12.0391 8.05094 12.2474 7.85675 12.3883C7.69555 12.5052 7.69467 12.5049 7.78812 12.6872C7.80853 12.727 7.83189 12.7655 7.8567 12.8028C8.04297 13.0828 8.30444 13.2776 8.60093 13.4258C9.20751 13.7291 9.85042 13.822 10.5207 13.7225C10.9683 13.656 11.3802 13.4984 11.7443 13.2264C11.9701 13.0578 12.1462 12.8505 12.2629 12.5938C12.2978 12.517 12.3029 12.4601 12.2077 12.4252C12.1509 12.4045 12.1061 12.3622 12.0647 12.3179C11.9344 12.1783 11.858 12.0123 11.8155 11.8285C11.7945 11.7375 11.7764 11.7306 11.714 11.7828C11.289 12.1385 10.7961 12.3396 10.2453 12.3878C9.61959 12.4427 9.03646 12.3093 8.50395 11.9424Z\"\n          fill=\"#70C16B\"\n        />\n        <path\n          d=\"M10.0725 9.02638C10.1659 9.02647 10.2503 9.02356 10.3345 9.02733C10.4618 9.03303 10.5117 9.08722 10.5119 9.21382C10.512 9.39887 10.5123 9.58392 10.5108 9.76896C10.5095 9.92909 10.4672 9.97032 10.3091 9.97042C10.0923 9.97056 9.87552 9.97128 9.65872 9.97031C9.5373 9.96977 9.48874 9.92197 9.48802 9.80202C9.48684 9.60802 9.48738 9.41401 9.48781 9.22001C9.48813 9.07754 9.53689 9.02869 9.68409 9.02669C9.81053 9.02497 9.93703 9.02636 10.0725 9.02638Z\"\n          fill=\"#70C16B\"\n        />\n        <path\n          d=\"M9.98224 7.71742C10.1088 7.71743 10.2263 7.71608 10.3437 7.71784C10.4544 7.71949 10.4943 7.7606 10.4947 7.87147C10.4954 8.08046 10.4954 8.28945 10.4946 8.49844C10.4941 8.61123 10.461 8.65528 10.3477 8.65817C10.1099 8.66423 9.87184 8.66311 9.63399 8.65901C9.54897 8.65755 9.48959 8.59015 9.48882 8.5056C9.48686 8.29066 9.48668 8.07567 9.489 7.86073C9.48998 7.77003 9.54318 7.72058 9.63886 7.71824C9.75025 7.71552 9.86175 7.71749 9.98224 7.71742Z\"\n          fill=\"#70C16B\"\n        />\n        <path\n          d=\"M10.1271 7.31629C9.96749 7.31634 9.81695 7.31737 9.66643 7.31608C9.54461 7.31503 9.48903 7.2611 9.48823 7.1417C9.48688 6.94177 9.48707 6.74183 9.48837 6.5419C9.48914 6.42492 9.5401 6.3736 9.66035 6.37255C9.88313 6.37061 10.1059 6.3706 10.3287 6.37255C10.4577 6.37367 10.4949 6.41315 10.4951 6.5395C10.4953 6.74838 10.4954 6.95727 10.4947 7.16616C10.4943 7.2807 10.4594 7.31479 10.3438 7.31596C10.2746 7.31666 10.2053 7.31621 10.1271 7.31629Z\"\n          fill=\"#70C16B\"\n        />\n        <path\n          d=\"M10.8633 7.12818C10.8634 6.92229 10.8631 6.72505 10.8636 6.52782C10.8638 6.41178 10.89 6.38181 11.0122 6.37422C11.1023 6.36862 11.193 6.37228 11.2834 6.37216C11.4161 6.37198 11.5488 6.37023 11.6814 6.37266C11.8074 6.37497 11.8484 6.41697 11.8491 6.54268C11.8501 6.74286 11.8504 6.94307 11.848 7.14323C11.8464 7.28267 11.8098 7.31592 11.6686 7.3162C11.4606 7.31659 11.2526 7.31669 11.0446 7.31661C10.8807 7.31654 10.8638 7.29952 10.8633 7.12818Z\"\n          fill=\"#70C16B\"\n        />\n        <path\n          d=\"M10.8626 9.62397C10.8627 9.46864 10.8621 9.32227 10.8629 9.1759C10.8635 9.0747 10.8908 9.03414 10.9931 9.03145C11.237 9.02504 11.4812 9.02717 11.7252 9.03086C11.8099 9.03215 11.8469 9.09365 11.8475 9.17004C11.8492 9.39102 11.8498 9.61213 11.8439 9.83301C11.841 9.94011 11.8039 9.97024 11.6971 9.97096C11.462 9.97252 11.2269 9.97253 10.9919 9.97132C10.8977 9.97084 10.8648 9.93547 10.863 9.83904C10.8617 9.77035 10.8627 9.70163 10.8626 9.62397Z\"\n          fill=\"#70C16B\"\n        />\n        <path\n          d=\"M8.71562 9.0284C8.81194 9.02846 8.89933 9.0259 8.98649 9.02918C9.09308 9.0332 9.13748 9.08046 9.13779 9.18672C9.13838 9.39555 9.13821 9.60439 9.13686 9.81322C9.1361 9.93105 9.09886 9.97015 8.98035 9.97128C8.75765 9.97343 8.53489 9.97347 8.31218 9.97155C8.19665 9.97055 8.15005 9.92184 8.14929 9.80485C8.14795 9.59901 8.14839 9.39316 8.14926 9.18731C8.14972 9.07823 8.19571 9.03102 8.3093 9.02867C8.44167 9.02594 8.57415 9.02825 8.71562 9.0284Z\"\n          fill=\"#70C16B\"\n        />\n        <path\n          d=\"M11.7768 7.72644C11.8423 7.76038 11.8442 7.81901 11.8451 7.87041C11.8488 8.07625 11.8505 8.28227 11.8457 8.48806C11.8425 8.62424 11.7997 8.65981 11.6607 8.66049C11.4499 8.66151 11.2391 8.66157 11.0283 8.66036C10.8957 8.6596 10.8628 8.62609 10.8626 8.49639C10.8623 8.28747 10.8621 8.07855 10.8627 7.86964C10.8631 7.75516 10.8994 7.7165 11.0117 7.7168C11.2644 7.71746 11.5171 7.72056 11.7768 7.72644Z\"\n          fill=\"#70C16B\"\n        />\n        <path\n          d=\"M8.60739 7.31634C8.50787 7.3163 8.41739 7.31726 8.32694 7.31599C8.20161 7.31424 8.14964 7.26389 8.14911 7.14273C8.14826 6.94545 8.14812 6.74817 8.14925 6.55089C8.14995 6.42928 8.20395 6.37337 8.32451 6.37242C8.53861 6.37075 8.75275 6.37047 8.96684 6.37266C9.09591 6.37398 9.13807 6.41948 9.13812 6.54679C9.1382 6.74706 9.1392 6.94733 9.13771 7.14758C9.13678 7.27199 9.09219 7.31522 8.96927 7.31597C8.85166 7.31668 8.73405 7.31626 8.60739 7.31634Z\"\n          fill=\"#70C16B\"\n        />\n        <path\n          d=\"M9.13391 7.8073C9.13674 8.04206 9.13924 8.26916 9.13745 8.49623C9.13656 8.60927 9.08437 8.6598 8.96901 8.66099C8.75498 8.66321 8.54088 8.66314 8.32684 8.66092C8.21023 8.6597 8.15 8.59734 8.14933 8.48149C8.14816 8.27829 8.14809 8.07507 8.14942 7.87187C8.1501 7.76824 8.19984 7.71857 8.30534 7.71783C8.53145 7.71626 8.75758 7.71805 8.9837 7.7168C9.05054 7.71643 9.1003 7.74061 9.13391 7.8073Z\"\n          fill=\"#70C16B\"\n        />\n      </svg>\n      }\n\n      <!-- * Icon for \"Redaction in progress\" -->\n      @else if (fileType.includes('Redaction in progress')) {\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#FFF2BC\" />\n        <path\n          d=\"M5.76287 12.7383C6.30633 12.5315 6.83964 12.3178 7.38227 12.1284C7.64219 12.0376 7.72243 11.8232 7.74821 11.581C7.7647 11.4262 7.74121 11.2836 7.64788 11.1402C7.40918 10.7733 7.20742 10.3855 7.09818 9.95757C7.08888 9.92116 7.06938 9.8921 7.03539 9.87399C6.81702 9.75766 6.70027 9.5602 6.61523 9.34242C6.44718 8.91208 6.3891 8.46622 6.44945 8.00783C6.47141 7.8411 6.55446 7.7093 6.7141 7.63747C6.76067 7.61651 6.77483 7.58739 6.77374 7.54023C6.76734 7.26537 6.7829 6.99096 6.81136 6.71805C6.89223 5.94273 7.19435 5.27545 7.8043 4.763C8.29414 4.35146 8.86405 4.12236 9.49611 4.03764C10.3057 3.92913 11.0738 4.05095 11.786 4.4589C12.5379 4.88956 12.9687 5.54602 13.1351 6.38058C13.2094 6.7532 13.2266 7.13187 13.2264 7.51098C13.2264 7.58043 13.2392 7.62317 13.3132 7.65465C13.5058 7.73668 13.5557 7.91714 13.5676 8.0976C13.5974 8.55247 13.5379 8.99672 13.3529 9.41869C13.2748 9.59685 13.1724 9.75711 12.9944 9.85533C12.9521 9.87868 12.9303 9.91399 12.9171 9.95998C12.7875 10.4092 12.5873 10.8242 12.3111 11.2038C12.2238 11.3237 12.2489 11.4671 12.2555 11.6031C12.2581 11.6559 12.2741 11.7087 12.2891 11.7601C12.3409 11.937 12.447 12.0606 12.6268 12.1285C13.3163 12.3888 14.0041 12.6536 14.6914 12.9196C14.9103 13.0043 15.1239 13.1012 15.3312 13.2122C15.934 13.535 16.2934 14.0254 16.3947 14.7014C16.4394 14.9992 16.4836 15.2963 16.4856 15.5982C16.4859 15.6456 16.4995 15.6929 16.5 15.7403C16.5016 15.894 16.4048 15.9905 16.2473 15.9963C16.1093 16.0014 16.0054 15.9032 16.0032 15.7537C16.0006 15.5716 16.0006 15.3896 15.9838 15.2079C15.9575 14.9227 15.924 14.6397 15.8219 14.3683C15.6715 13.9687 15.3719 13.7212 14.9915 13.5533C14.4464 13.3126 13.8862 13.1095 13.3303 12.8957C13.1591 12.8299 12.9866 12.7672 12.8153 12.7018C12.7688 12.6841 12.7388 12.6841 12.7188 12.7404C12.5478 13.2214 12.1898 13.5376 11.7615 13.7853C11.3609 14.0169 10.924 14.1523 10.4644 14.199C9.67443 14.2792 8.91314 14.181 8.21274 13.7818C7.82906 13.5632 7.50878 13.2797 7.32523 12.868C7.3228 12.8626 7.32005 12.8572 7.3177 12.8517C7.24643 12.685 7.24619 12.6843 7.06996 12.7507C6.42256 12.9946 5.77254 13.2318 5.13417 13.4987C5.00895 13.5511 4.88806 13.6107 4.76971 13.6767C4.37394 13.8972 4.17868 14.2522 4.09128 14.6761C4.01815 15.0308 3.99722 15.3909 3.99916 15.7525C3.99988 15.8869 3.93015 15.9815 3.82244 15.9962C3.67145 16.0168 3.55717 15.9528 3.51657 15.8211C3.50532 15.7846 3.49838 15.7445 3.50033 15.7066C3.52378 15.251 3.55755 14.7964 3.68342 14.3546C3.82321 13.8639 4.14709 13.5191 4.57679 13.2611C4.9163 13.0572 5.28877 12.9248 5.65505 12.7792C5.6886 12.7659 5.72243 12.7533 5.76287 12.7383ZM12.7271 7.73102C12.7329 7.59676 12.7511 7.46162 12.7417 7.32843C12.7218 7.04934 12.7229 6.76907 12.6743 6.49132C12.5802 5.95318 12.3411 5.49208 11.9248 5.13687C11.3471 4.644 10.6534 4.45797 9.90571 4.47023C9.53217 4.47635 9.16463 4.55569 8.81613 4.69787C8.43785 4.8522 8.09844 5.06557 7.83402 5.3803C7.43374 5.85676 7.28562 6.41995 7.27511 7.02681C7.27046 7.29574 7.27494 7.56481 7.2741 7.83382C7.27364 7.97989 7.21805 8.03932 7.07345 8.0538C7.04347 8.05681 7.01367 8.0648 6.98379 8.0648C6.91286 8.0648 6.89199 8.10004 6.89285 8.16662C6.89488 8.32477 6.89209 8.48266 6.91139 8.64045C6.94187 8.88953 7.00426 9.12616 7.15465 9.33361C7.1857 9.37644 7.22213 9.41182 7.27206 9.42773C7.43689 9.48028 7.51209 9.59802 7.54798 9.7604C7.66669 10.2974 7.91584 10.7674 8.29858 11.1678C8.70235 11.5902 9.18471 11.8664 9.77345 11.9267C10.2384 11.9743 10.6803 11.873 11.0844 11.6414C11.7773 11.2444 12.1949 10.6338 12.4347 9.89075C12.4667 9.79136 12.5024 9.69309 12.5353 9.59396C12.5534 9.5393 12.5864 9.49493 12.6422 9.48094C12.8301 9.43385 12.9072 9.2912 12.9668 9.12845C13.0783 8.82397 13.1091 8.50829 13.1069 8.1875C13.1061 8.07631 13.092 8.06158 12.9775 8.05291C12.9595 8.05154 12.9413 8.05238 12.9232 8.05168C12.7936 8.04668 12.7303 7.984 12.7267 7.85627C12.7257 7.82043 12.7268 7.78453 12.7271 7.73102ZM8.50395 11.9424C8.41409 11.8741 8.32423 11.8059 8.23004 11.7344C8.22075 11.7471 8.21346 11.7535 8.21077 11.7615C8.20414 11.7811 8.19996 11.8014 8.1942 11.8213C8.13106 12.0391 8.05094 12.2474 7.85675 12.3883C7.69555 12.5052 7.69467 12.5049 7.78812 12.6872C7.80853 12.727 7.83189 12.7655 7.8567 12.8028C8.04297 13.0828 8.30444 13.2776 8.60093 13.4258C9.20751 13.7291 9.85042 13.822 10.5207 13.7225C10.9683 13.656 11.3802 13.4984 11.7443 13.2264C11.9701 13.0578 12.1462 12.8505 12.2629 12.5938C12.2978 12.517 12.3029 12.4601 12.2077 12.4252C12.1509 12.4045 12.1061 12.3622 12.0647 12.3179C11.9344 12.1783 11.858 12.0123 11.8155 11.8285C11.7945 11.7375 11.7764 11.7306 11.714 11.7828C11.289 12.1385 10.7961 12.3396 10.2453 12.3878C9.61959 12.4427 9.03646 12.3093 8.50395 11.9424Z\"\n          fill=\"#EFB002\"\n        />\n        <path\n          d=\"M10.0725 9.02638C10.1659 9.02647 10.2503 9.02356 10.3345 9.02733C10.4618 9.03303 10.5117 9.08722 10.5119 9.21382C10.512 9.39887 10.5123 9.58392 10.5108 9.76896C10.5095 9.92909 10.4672 9.97032 10.3091 9.97042C10.0923 9.97056 9.87552 9.97128 9.65872 9.97031C9.5373 9.96977 9.48874 9.92197 9.48802 9.80202C9.48684 9.60802 9.48738 9.41401 9.48781 9.22001C9.48813 9.07754 9.53689 9.02869 9.68409 9.02669C9.81053 9.02497 9.93703 9.02636 10.0725 9.02638Z\"\n          fill=\"#EFB002\"\n        />\n        <path\n          d=\"M9.98224 7.71742C10.1088 7.71743 10.2263 7.71608 10.3437 7.71784C10.4544 7.71949 10.4943 7.7606 10.4947 7.87147C10.4954 8.08046 10.4954 8.28945 10.4946 8.49844C10.4941 8.61123 10.461 8.65528 10.3477 8.65817C10.1099 8.66423 9.87184 8.66311 9.63399 8.65901C9.54897 8.65755 9.48959 8.59015 9.48882 8.5056C9.48686 8.29066 9.48668 8.07567 9.489 7.86073C9.48998 7.77003 9.54318 7.72058 9.63886 7.71824C9.75025 7.71552 9.86175 7.71749 9.98224 7.71742Z\"\n          fill=\"#EFB002\"\n        />\n        <path\n          d=\"M10.1271 7.31629C9.96749 7.31634 9.81695 7.31737 9.66643 7.31608C9.54461 7.31503 9.48903 7.2611 9.48823 7.1417C9.48688 6.94177 9.48707 6.74183 9.48837 6.5419C9.48914 6.42492 9.5401 6.3736 9.66035 6.37255C9.88313 6.37061 10.1059 6.3706 10.3287 6.37255C10.4577 6.37367 10.4949 6.41315 10.4951 6.5395C10.4953 6.74838 10.4954 6.95727 10.4947 7.16616C10.4943 7.2807 10.4594 7.31479 10.3438 7.31596C10.2746 7.31666 10.2053 7.31621 10.1271 7.31629Z\"\n          fill=\"#EFB002\"\n        />\n        <path\n          d=\"M10.8633 7.12818C10.8634 6.92229 10.8631 6.72505 10.8636 6.52782C10.8638 6.41178 10.89 6.38181 11.0122 6.37422C11.1023 6.36862 11.193 6.37228 11.2834 6.37216C11.4161 6.37198 11.5488 6.37023 11.6814 6.37266C11.8074 6.37497 11.8484 6.41697 11.8491 6.54268C11.8501 6.74286 11.8504 6.94307 11.848 7.14323C11.8464 7.28267 11.8098 7.31592 11.6686 7.3162C11.4606 7.31659 11.2526 7.31669 11.0446 7.31661C10.8807 7.31654 10.8638 7.29952 10.8633 7.12818Z\"\n          fill=\"#EFB002\"\n        />\n        <path\n          d=\"M10.8626 9.62397C10.8627 9.46864 10.8621 9.32227 10.8629 9.1759C10.8635 9.0747 10.8908 9.03414 10.9931 9.03145C11.237 9.02504 11.4812 9.02717 11.7252 9.03086C11.8099 9.03215 11.8469 9.09365 11.8475 9.17004C11.8492 9.39102 11.8498 9.61213 11.8439 9.83301C11.841 9.94011 11.8039 9.97024 11.6971 9.97096C11.462 9.97252 11.2269 9.97253 10.9919 9.97132C10.8977 9.97084 10.8648 9.93547 10.863 9.83904C10.8617 9.77035 10.8627 9.70163 10.8626 9.62397Z\"\n          fill=\"#EFB002\"\n        />\n        <path\n          d=\"M8.71562 9.0284C8.81194 9.02846 8.89933 9.0259 8.98649 9.02918C9.09308 9.0332 9.13748 9.08046 9.13779 9.18672C9.13838 9.39555 9.13821 9.60439 9.13686 9.81322C9.1361 9.93105 9.09886 9.97015 8.98035 9.97128C8.75765 9.97343 8.53489 9.97347 8.31218 9.97155C8.19665 9.97055 8.15005 9.92184 8.14929 9.80485C8.14795 9.59901 8.14839 9.39316 8.14926 9.18731C8.14972 9.07823 8.19571 9.03102 8.3093 9.02867C8.44167 9.02594 8.57415 9.02825 8.71562 9.0284Z\"\n          fill=\"#EFB002\"\n        />\n        <path\n          d=\"M11.7768 7.72644C11.8423 7.76038 11.8442 7.81901 11.8451 7.87041C11.8488 8.07625 11.8505 8.28227 11.8457 8.48806C11.8425 8.62424 11.7997 8.65981 11.6607 8.66049C11.4499 8.66151 11.2391 8.66157 11.0283 8.66036C10.8957 8.6596 10.8628 8.62609 10.8626 8.49639C10.8623 8.28747 10.8621 8.07855 10.8627 7.86964C10.8631 7.75516 10.8994 7.7165 11.0117 7.7168C11.2644 7.71746 11.5171 7.72056 11.7768 7.72644Z\"\n          fill=\"#EFB002\"\n        />\n        <path\n          d=\"M8.60739 7.31634C8.50787 7.3163 8.41739 7.31726 8.32694 7.31599C8.20161 7.31424 8.14964 7.26389 8.14911 7.14273C8.14826 6.94545 8.14812 6.74817 8.14925 6.55089C8.14995 6.42928 8.20395 6.37337 8.32451 6.37242C8.53861 6.37075 8.75275 6.37047 8.96684 6.37266C9.09591 6.37398 9.13807 6.41948 9.13812 6.54679C9.1382 6.74706 9.1392 6.94733 9.13771 7.14758C9.13678 7.27199 9.09219 7.31522 8.96927 7.31597C8.85166 7.31668 8.73405 7.31626 8.60739 7.31634Z\"\n          fill=\"#EFB002\"\n        />\n        <path\n          d=\"M9.13391 7.8073C9.13674 8.04206 9.13924 8.26916 9.13745 8.49623C9.13656 8.60927 9.08437 8.6598 8.96901 8.66099C8.75498 8.66321 8.54088 8.66314 8.32684 8.66092C8.21023 8.6597 8.15 8.59734 8.14933 8.48149C8.14816 8.27829 8.14809 8.07507 8.14942 7.87187C8.1501 7.76824 8.19984 7.71857 8.30534 7.71783C8.53145 7.71626 8.75758 7.71805 8.9837 7.7168C9.05054 7.71643 9.1003 7.74061 9.13391 7.8073Z\"\n          fill=\"#EFB002\"\n        />\n      </svg>\n      }\n\n      <!-- * Icon for \"Beeped\" -->\n      @else if (fileType.includes('Beeped')) {\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#1D417E\" />\n        <path\n          d=\"M13 11L14 10M14 10L15 9M14 10L13 9M14 10L15 11\"\n          stroke=\"white\"\n          stroke-width=\"0.8\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n        <path\n          d=\"M5 10.9277V9.07065C5 8.80544 5.10536 8.55108 5.29289 8.36355C5.48043 8.17601 5.73478 8.07065 6 8.07065H7.45C7.54776 8.07063 7.64337 8.04195 7.725 7.98815L10.725 6.01015C10.8004 5.96051 10.8878 5.9322 10.9779 5.92822C11.0681 5.92424 11.1577 5.94474 11.2371 5.98754C11.3166 6.03035 11.383 6.09386 11.4293 6.17135C11.4755 6.24883 11.5 6.3374 11.5 6.42765V13.5707C11.5 13.6609 11.4755 13.7495 11.4293 13.827C11.383 13.9044 11.3166 13.968 11.2371 14.0108C11.1577 14.0536 11.0681 14.0741 10.9779 14.0701C10.8878 14.0661 10.8004 14.0378 10.725 13.9882L7.725 12.0102C7.64337 11.9564 7.54776 11.9277 7.45 11.9277H6C5.73478 11.9277 5.48043 11.8223 5.29289 11.6348C5.10536 11.4472 5 11.1929 5 10.9277Z\"\n          stroke=\"white\"\n          stroke-width=\"0.8\"\n        />\n      </svg>\n      }\n\n      <!-- * Icon for \"Clipped\" -->\n      @else if (fileType.includes('Clipped')) {\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#1D417E\" />\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M12.6731 4.81628C12.7746 4.63575 13.0032 4.57169 13.1838 4.67319C13.3643 4.77469 13.4284 5.00332 13.3269 5.18385L10.4302 10.3359L11.7838 12.7435C12.0747 12.0848 12.7336 11.625 13.5 11.625C14.5355 11.625 15.375 12.4645 15.375 13.5C15.375 14.5356 14.5355 15.375 13.5 15.375C12.7885 15.375 12.1697 14.9788 11.8519 14.395L10 11.1011L8.14803 14.395C7.83032 14.9788 7.21143 15.375 6.5 15.375C5.46446 15.375 4.625 14.5356 4.625 13.5C4.625 12.4645 5.46446 11.625 6.5 11.625C7.26635 11.625 7.92532 12.0848 8.21613 12.7435L9.5698 10.3359L6.67312 5.18385C6.57162 5.00332 6.63569 4.77469 6.81622 4.67319C6.99674 4.57169 7.22538 4.63575 7.32688 4.81628L10 9.57075L12.6731 4.81628ZM6.5 14.625C6.91769 14.625 7.28221 14.3974 7.47628 14.0594L7.48626 14.0417C7.57469 13.881 7.625 13.6964 7.625 13.5C7.625 12.8787 7.12132 12.375 6.5 12.375C5.87868 12.375 5.375 12.8787 5.375 13.5C5.375 14.1214 5.87868 14.625 6.5 14.625ZM13.5 14.625C13.0823 14.625 12.7178 14.3974 12.5237 14.0594L12.5137 14.0417C12.4253 13.881 12.375 13.6964 12.375 13.5C12.375 12.8787 12.8787 12.375 13.5 12.375C14.1213 12.375 14.625 12.8787 14.625 13.5C14.625 14.1214 14.1213 14.625 13.5 14.625Z\"\n          fill=\"white\"\n        />\n      </svg>\n      }\n\n      <!-- * Icon for \"Pre-recorded\" -->\n      @else if (fileType.includes('Pre')) {\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#FFF2BC\" />\n        <mask\n          id=\"mask0_1733_21611\"\n          style=\"mask-type: alpha\"\n          maskUnits=\"userSpaceOnUse\"\n          x=\"4\"\n          y=\"4\"\n          width=\"12\"\n          height=\"12\"\n        >\n          <rect x=\"4\" y=\"4\" width=\"12\" height=\"12\" fill=\"#D9D9D9\" />\n        </mask>\n        <g mask=\"url(#mask0_1733_21611)\">\n          <path\n            d=\"M6 14C5.725 14 5.48958 13.9021 5.29375 13.7062C5.09792 13.5104 5 13.275 5 13V7C5 6.725 5.09792 6.48958 5.29375 6.29375C5.48958 6.09792 5.725 6 6 6H12C12.275 6 12.5104 6.09792 12.7063 6.29375C12.9021 6.48958 13 6.725 13 7V9.25L14.575 7.675C14.6583 7.59167 14.75 7.57083 14.85 7.6125C14.95 7.65417 15 7.73333 15 7.85V12.15C15 12.2667 14.95 12.3458 14.85 12.3875C14.75 12.4292 14.6583 12.4083 14.575 12.325L13 10.75V13C13 13.275 12.9021 13.5104 12.7063 13.7062C12.5104 13.9021 12.275 14 12 14H6ZM6 13H12V7H6V13Z\"\n            fill=\"#EFB002\"\n          />\n        </g>\n      </svg>\n      }\n\n      <!-- * Icon for \"Normal Video\" -->\n      @else if (fileType.includes('Video')) {\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#4D7DBF\" />\n        <mask\n          id=\"mask0_1733_21667\"\n          style=\"mask-type: alpha\"\n          maskUnits=\"userSpaceOnUse\"\n          x=\"4\"\n          y=\"4\"\n          width=\"12\"\n          height=\"12\"\n        >\n          <rect x=\"4\" y=\"4\" width=\"12\" height=\"12\" fill=\"#D9D9D9\" />\n        </mask>\n        <g mask=\"url(#mask0_1733_21667)\">\n          <path\n            d=\"M6 14C5.725 14 5.48958 13.9021 5.29375 13.7062C5.09792 13.5104 5 13.275 5 13V7C5 6.725 5.09792 6.48958 5.29375 6.29375C5.48958 6.09792 5.725 6 6 6H12C12.275 6 12.5104 6.09792 12.7063 6.29375C12.9021 6.48958 13 6.725 13 7V9.25L14.575 7.675C14.6583 7.59167 14.75 7.57083 14.85 7.6125C14.95 7.65417 15 7.73333 15 7.85V12.15C15 12.2667 14.95 12.3458 14.85 12.3875C14.75 12.4292 14.6583 12.4083 14.575 12.325L13 10.75V13C13 13.275 12.9021 13.5104 12.7063 13.7062C12.5104 13.9021 12.275 14 12 14H6ZM6 13H12V7H6V13Z\"\n            fill=\"white\"\n          />\n        </g>\n      </svg>\n      }\n\n      <!-- * Icon for \"Audio\" -->\n      @else if (fileType.includes('Audio')) {\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#4D7DBF\" />\n        <mask\n          id=\"mask0_1734_21672\"\n          style=\"mask-type: alpha\"\n          maskUnits=\"userSpaceOnUse\"\n          x=\"4\"\n          y=\"4\"\n          width=\"12\"\n          height=\"12\"\n        >\n          <path d=\"M16 4H4V16H16V4Z\" fill=\"#D9D9D9\" />\n        </mask>\n        <g mask=\"url(#mask0_1734_21672)\">\n          <path\n            d=\"M13.5 9.9875C13.5 9.29583 13.3167 8.66458 12.95 8.09375C12.5833 7.52292 12.0917 7.09583 11.475 6.8125C11.35 6.75417 11.2583 6.66458 11.2 6.54375C11.1417 6.42292 11.1333 6.3 11.175 6.175C11.225 6.04167 11.3146 5.94583 11.4437 5.8875C11.5729 5.82917 11.7042 5.82917 11.8375 5.8875C12.6458 6.24583 13.2917 6.79375 13.775 7.53125C14.2583 8.26875 14.5 9.0875 14.5 9.9875C14.5 10.8875 14.2583 11.7062 13.775 12.4437C13.2917 13.1812 12.6458 13.7292 11.8375 14.0875C11.7042 14.1458 11.5729 14.1458 11.4437 14.0875C11.3146 14.0292 11.225 13.9333 11.175 13.8C11.1333 13.675 11.1417 13.5521 11.2 13.4312C11.2583 13.3104 11.35 13.2208 11.475 13.1625C12.0917 12.8792 12.5833 12.4521 12.95 11.8812C13.3167 11.3104 13.5 10.6792 13.5 9.9875ZM7.5 11.5H6C5.85833 11.5 5.73958 11.4521 5.64375 11.3562C5.54792 11.2604 5.5 11.1417 5.5 11V9C5.5 8.85833 5.54792 8.73958 5.64375 8.64375C5.73958 8.54792 5.85833 8.5 6 8.5H7.5L9.15 6.85C9.30833 6.69167 9.48958 6.65625 9.69375 6.74375C9.89792 6.83125 10 6.9875 10 7.2125V12.7875C10 13.0125 9.89792 13.1687 9.69375 13.2562C9.48958 13.3437 9.30833 13.3083 9.15 13.15L7.5 11.5ZM12.25 10C12.25 10.35 12.1708 10.6812 12.0125 10.9937C11.8542 11.3062 11.6458 11.5625 11.3875 11.7625C11.3042 11.8125 11.2187 11.8146 11.1312 11.7687C11.0437 11.7229 11 11.65 11 11.55V8.425C11 8.325 11.0437 8.25208 11.1312 8.20625C11.2187 8.16042 11.3042 8.1625 11.3875 8.2125C11.6458 8.42083 11.8542 8.68333 12.0125 9C12.1708 9.31667 12.25 9.65 12.25 10ZM9 8.425L7.925 9.5H6.5V10.5H7.925L9 11.575V8.425Z\"\n            fill=\"white\"\n          />\n        </g>\n      </svg>\n      }\n\n      <!-- * Icon for \"Image\" -->\n      @else if (fileType.includes('Image')) {\n      <svg width=\"28\" height=\"28\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#4D7DBF\" />\n        <mask\n          id=\"mask0_1734_21677\"\n          style=\"mask-type: alpha\"\n          maskUnits=\"userSpaceOnUse\"\n          x=\"4\"\n          y=\"4\"\n          width=\"12\"\n          height=\"12\"\n        >\n          <path d=\"M16 4H4V16H16V4Z\" fill=\"#D9D9D9\" />\n        </mask>\n        <g mask=\"url(#mask0_1734_21677)\">\n          <path\n            d=\"M6.5 14.5C6.225 14.5 5.98958 14.4021 5.79375 14.2063C5.59792 14.0104 5.5 13.775 5.5 13.5V6.5C5.5 6.225 5.59792 5.98958 5.79375 5.79375C5.98958 5.59792 6.225 5.5 6.5 5.5H13.5C13.775 5.5 14.0104 5.59792 14.2063 5.79375C14.4021 5.98958 14.5 6.225 14.5 6.5V13.5C14.5 13.775 14.4021 14.0104 14.2063 14.2063C14.0104 14.4021 13.775 14.5 13.5 14.5H6.5ZM6.5 13.5H13.5V6.5H6.5V13.5ZM7.5 12.5H12.5C12.6 12.5 12.675 12.4542 12.725 12.3625C12.775 12.2708 12.7667 12.1833 12.7 12.1L11.325 10.2625C11.275 10.1958 11.2083 10.1625 11.125 10.1625C11.0417 10.1625 10.975 10.1958 10.925 10.2625L9.625 12L8.7 10.7625C8.65 10.6958 8.58333 10.6625 8.5 10.6625C8.41667 10.6625 8.35 10.6958 8.3 10.7625L7.3 12.1C7.23333 12.1833 7.225 12.2708 7.275 12.3625C7.325 12.4542 7.4 12.5 7.5 12.5Z\"\n            fill=\"white\"\n          />\n        </g>\n      </svg>\n      }\n    </div>\n\n    <span\n      [ellipsisCheck]=\"$filetype().includes('photo') ? $photoFile()!.uniqueFileName : $recFile()!.uniqueFileName\"\n      matTooltipClass=\"max-w-unset\"\n      class=\"ms-2 fc-filename\"\n    >\n      {{ $filetype().includes('photo') ? $photoFile()!.uniqueFileName : $recFile()!.uniqueFileName }}\n    </span>\n  </div>\n\n  <div class=\"fc-cal\">\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clip-path=\"url(#clip0_1634_21588)\">\n        <path\n          d=\"M12.9109 1.23252H12.3141V0.628628C12.3141 0.283594 12.0344 0.00390625 11.6894 0.00390625C11.3444 0.00390625 11.0647 0.283594 11.0647 0.628628V1.23252H4.9353V0.628628C4.9353 0.283594 4.65561 0.00390625 4.31058 0.00390625C3.96555 0.00390625 3.68586 0.283594 3.68586 0.628628V1.23252H3.08909C1.38576 1.23252 0 2.61827 0 4.32158V12.9077C0 14.611 1.38576 15.9968 3.08909 15.9968H12.9109C14.6142 15.9968 16 14.611 16 12.9077V4.32158C16 2.61827 14.6142 1.23252 12.9109 1.23252ZM3.08909 2.48196H3.68586V3.70017C3.68586 4.0452 3.96555 4.32489 4.31058 4.32489C4.65561 4.32489 4.9353 4.0452 4.9353 3.70017V2.48196H11.0647V3.70017C11.0647 4.0452 11.3444 4.32489 11.6894 4.32489C12.0345 4.32489 12.3141 4.0452 12.3141 3.70017V2.48196H12.9109C13.9253 2.48196 14.7506 3.30722 14.7506 4.32158V4.91837H1.24944V4.32158C1.24944 3.30722 2.0747 2.48196 3.08909 2.48196ZM12.9109 14.7473H3.08909C2.0747 14.7473 1.24944 13.9221 1.24944 12.9077V6.16782H14.7506V12.9077C14.7506 13.9221 13.9253 14.7473 12.9109 14.7473ZM5.54962 8.62507C5.54962 8.9701 5.26993 9.24979 4.9249 9.24979H3.69629C3.35126 9.24979 3.07157 8.9701 3.07157 8.62507C3.07157 8.28003 3.35126 8.00035 3.69629 8.00035H4.9249C5.2699 8.00035 5.54962 8.28003 5.54962 8.62507ZM12.9285 8.62507C12.9285 8.9701 12.6488 9.24979 12.3037 9.24979H11.0751C10.7301 9.24979 10.4504 8.9701 10.4504 8.62507C10.4504 8.28003 10.7301 8.00035 11.0751 8.00035H12.3037C12.6487 8.00035 12.9285 8.28003 12.9285 8.62507ZM9.23548 8.62507C9.23548 8.9701 8.95579 9.24979 8.61076 9.24979H7.38215C7.03712 9.24979 6.75743 8.9701 6.75743 8.62507C6.75743 8.28003 7.03712 8.00035 7.38215 8.00035H8.61076C8.95576 8.00035 9.23548 8.28003 9.23548 8.62507ZM5.54962 12.3109C5.54962 12.656 5.26993 12.9356 4.9249 12.9356H3.69629C3.35126 12.9356 3.07157 12.656 3.07157 12.3109C3.07157 11.9659 3.35126 11.6862 3.69629 11.6862H4.9249C5.2699 11.6862 5.54962 11.9659 5.54962 12.3109ZM12.9285 12.3109C12.9285 12.656 12.6488 12.9356 12.3037 12.9356H11.0751C10.7301 12.9356 10.4504 12.656 10.4504 12.3109C10.4504 11.9659 10.7301 11.6862 11.0751 11.6862H12.3037C12.6487 11.6862 12.9285 11.9659 12.9285 12.3109ZM9.23548 12.3109C9.23548 12.656 8.95579 12.9356 8.61076 12.9356H7.38215C7.03712 12.9356 6.75743 12.656 6.75743 12.3109C6.75743 11.9659 7.03712 11.6862 7.38215 11.6862H8.61076C8.95576 11.6862 9.23548 11.9659 9.23548 12.3109Z\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_1634_21588\">\n          <rect width=\"16\" height=\"16\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n\n    <span class=\"timing-date\">\n      {{\n        $filetype().includes('photo')\n          ? ($photoFile()!.createdDate | date : 'dd MMMM y')\n          : ($recFile()!.startiTme | date : 'dd MMMM y')\n      }}&nbsp;({{\n        $filetype().includes('photo')\n          ? ($photoFile()!.createdDate | date : 'EEEE')\n          : ($recFile()!.startiTme | date : 'EEEE')\n      }})\n    </span>\n  </div>\n\n  <div class=\"fc-timing\">\n    <span class=\"timing-icon\">\n      <mat-icon>schedule</mat-icon>\n    </span>\n\n    <span class=\"timing-time\">\n      {{\n        $filetype().includes('photo')\n          ? ($photoFile()!.createdDate | date : 'hh:mm:ss')\n          : ($recFile()!.startiTme | date : 'hh:mm:ss')\n      }}\n\n      <span class=\"timing-to mx-1\">to</span>\n\n      {{ !$filetype().includes('photo') && ($recFile()!.finishTime | date : 'hh:mm:ss') }}\n    </span>\n\n    <!-- ! Duration only for video files -->\n    @if (!$filetype().includes('photo')) {\n    <span class=\"timing-duration\">Duration: {{ duration }}</span>\n    }\n  </div>\n\n  <div class=\"fc-location\">\n    <svg viewBox=\"0 -960 960 960\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M472-120q-73-1-137.5-13.5t-112-34Q175-189 147.5-218T120-280q0 33 27.5 62t75 50.5q47.5 21.5 112 34T472-120Zm-71-204q-30-3-58-8t-53.5-12q-25.5-7-48-15.5T200-379q19 11 41.5 19.5t48 15.5q25.5 7 53.5 12t58 8Zm79-275q86 0 177.5-26T760-679q-11-29-100.5-55T480-760q-91 0-178.5 25.5T200-679q15 29 104.5 54.5T480-599Zm-61 396q10 23 23 44t30 39q-73-1-137.5-13.5t-112-34Q175-189 147.5-218T120-280v-400q0-33 28.5-62t77.5-51q49-22 114.5-34.5T480-840q74 0 139.5 12.5T734-793q49 22 77.5 51t28.5 62q0 33-28.5 62T734-567q-49 22-114.5 34.5T480-520q-85 0-157-15t-123-44v101q40 37 100 54t121 22q-8 15-13 34.5t-7 43.5q-60-7-111.5-20T200-379v99q14 25 77 47t142 30ZM864-40 756-148q-22 13-46 20.5t-50 7.5q-75 0-127.5-52.5T480-300q0-75 52.5-127.5T660-480q75 0 127.5 52.5T840-300q0 26-7.5 50T812-204L920-96l-56 56ZM660-200q42 0 71-29t29-71q0-42-29-71t-71-29q-42 0-71 29t-29 71q0 42 29 71t71 29Z\"\n      />\n    </svg>\n\n    <span class=\"location-label\">{{ fileLocation }}</span>\n  </div>\n\n  <!-- * Placeholder to match the grip spacing -->\n  <div></div>\n\n  <div class=\"fc-cam-model\">\n    <span> {{ cameraModel }} </span>\n  </div>\n\n  <div class=\"fc-info me-3\">\n    <span>{{ fileType }}</span>\n  </div>\n</div>\n", "export const environment = {\n  production: true,\n  googleMapsApiKey: 'AIzaSyDacGjFtgUSKdB-ZaORFQYWIogWhj8IDRM'\n};\n", "import { Injectable, signal } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleMapsService {\n  private $api_loaded = signal<boolean>(false);\n  api_loaded = this.$api_loaded.asReadonly();\n\n  private loadPromise?: Promise<void>;\n\n  initialize(): Promise<void> {\n    // * Reuse the same promise if already loading or loaded\n    if (this.loadPromise) return this.loadPromise;\n\n    this.loadPromise = new Promise((resolve, reject) => {\n      // - Check if the API is already loaded\n      if (this.$api_loaded()) {\n        resolve();\n        return;\n      }\n\n      const script = document.createElement('script');\n\n      // - Load Google Maps API\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${environment.googleMapsApiKey}&libraries=places`;\n\n      // - async and defer attribute configuration\n      script.async = true;\n      script.defer = true;\n\n      // - Load the API and resolve the promise\n      script.onload = () => {\n        this.$api_loaded.set(true);\n        resolve();\n      };\n\n      // - Handle error\n      script.onerror = () => {\n        this.loadPromise = undefined;\n        reject('Google Maps API failed to load.');\n      };\n\n      // - Append the script to the document head\n      document.head.appendChild(script);\n    });\n\n    return this.loadPromise;\n  }\n}\n", "import { Component, ElementRef, inject, input, ViewChild } from '@angular/core';\n\nimport { SessionConstants } from 'src/app/constants/session-constants';\nimport { SessionGroupsModel } from 'src/app/api/model/models';\n\nimport { CalculationHelpers } from 'src/app/modules/shared/helpers/calculations';\nimport { SessionService } from '../../session.service';\n\nimport { FileCardComponent } from '../file-card/file-card.component';\nimport { GoogleMapsService } from 'src/app/modules/shared/services/google-maps.service';\n\n@Component({\n  selector: 'session-card',\n  standalone: false,\n  templateUrl: './session-card.component.html',\n  styleUrl: './session-card.component.scss',\n  host: {\n    '(document:click)': 'closeDropdown($event)'\n  }\n})\nexport class SessionCardComponent {\n  private readonly el = inject(ElementRef);\n  private readonly sessionService = inject(SessionService);\n  private readonly googleMapsService = inject(GoogleMapsService);\n  private readonly calculationHelpers = inject(CalculationHelpers);\n\n  @ViewChild(FileCardComponent) fileCardComponent!: FileCardComponent;\n\n  $session = input.required<SessionGroupsModel>({ alias: 'session' });\n  $isDropdownExpanded = input.required<boolean>({ alias: 'isDropdownExpanded' });\n\n  mutationObserver: MutationObserver | null = null;\n  readonly sessionTypes = SessionConstants.sessionTypes;\n\n  $isMapLoaded = this.googleMapsService.api_loaded;\n  mapOptions: google.maps.MapOptions = {};\n  mapMarkers: { lat: number; lng: number }[] = [];\n  mapVisible = false;\n\n  isTooltipDisabled = true;\n  dropdownState = false;\n  overflowExpanded = false;\n  overflowContents: string[] = ['RTAC'];\n\n  get username(): string {\n    return this.$session()['<CreatorUser>k__BackingField']._username;\n  }\n\n  get filesLength(): number {\n    // ! Exclude failed files\n    const excludedFiles = this.$session()._recordings.filter((file) => file['<RedactedStatus>k__BackingField'] === 11);\n\n    return this.$session()._recordings.length + this.$session()._photos.length - excludedFiles.length;\n  }\n\n  get duration(): string {\n    const start: any = new Date(this.$session()._start_time);\n    const end: any = new Date(this.$session()._finish_time);\n\n    const diff = end.getTime() - start.getTime();\n    const calculated_time = this.calculationHelpers.secondsToTime(diff / 1000);\n\n    const final_time = this.calculationHelpers.timeToWords(calculated_time);\n    return final_time;\n  }\n\n  get containsRedactedFiles(): boolean {\n    const files = this.$session()._recordings.filter(\n      (rec) => rec['<RedactedStatus>k__BackingField'] !== -1 && rec['<RedactedStatus>k__BackingField'] !== 13\n    );\n\n    return files.length !== 0;\n  }\n\n  get sessionType(): number {\n    return this.$session()['<SessionType>k__BackingField'];\n  }\n\n  onDropdownToggle() {\n    this.dropdownState = !this.dropdownState;\n    this.sessionService.updateSessionList(this.$session()!._session_id, this.dropdownState);\n  }\n\n  expandOverflow(event: MouseEvent) {\n    event.stopPropagation();\n    this.overflowExpanded = !this.overflowExpanded;\n  }\n\n  closeDropdown(event: any) {\n    const clickedInsideComponent = this.el.nativeElement.contains(event.target);\n    // const clickedInsideMultiSelectDropdown = !!(event.target as HTMLElement).closest('.select-drop-wrap');\n\n    // * Condition 1: Check for multi-select & close only when clicked outside\n    // * Condition 2: Check for single select & close when clicked outside and inside the dropdown\n    if (!clickedInsideComponent) {\n      if (this.overflowExpanded) this.overflowExpanded = false;\n    }\n  }\n\n  onOverflowClick(event: MouseEvent) {\n    event.stopPropagation();\n  }\n\n  routeToDetails() {\n    // ! Will not work for now\n    // TODO: Implement the logic to route when clicking on a session. Check file visibility & accessibility also.\n    this.fileCardComponent.routeToDetails();\n  }\n\n  displayMap(state: boolean) {\n    this.mapVisible = state;\n  }\n\n  ngAfterViewInit(): void {\n    // * This is a workaround to remove the keyboard shortcuts dialog that appears on the map - BUG\n    this.mutationObserver = new MutationObserver(() => {\n      const dialogs = document.querySelectorAll('dialog');\n\n      dialogs.forEach((dialog) => {\n        const isShortcutDialog = dialog.textContent?.includes('Keyboard shortcuts');\n\n        if (isShortcutDialog) {\n          // - Safely close if still open\n          if ((dialog as HTMLDialogElement).open) {\n            try {\n              (dialog as HTMLDialogElement).close();\n            } catch (err) {\n              console.warn('Dialog close failed:', err);\n            }\n          }\n        }\n      });\n    });\n\n    // - Observe the entire document for changes\n    this.mutationObserver.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n  }\n\n  async ngOnInit() {\n    await this.googleMapsService.initialize();\n\n    this.mapOptions = {\n      mapId: Math.random().toString(36).substring(2, 15),\n      center: { lat: -33.71, lng: 150.36 },\n      zoom: 13,\n      disableDefaultUI: true,\n      keyboardShortcuts: false\n    };\n\n    // TODO: Update this with data from API\n    this.mapMarkers = [\n      // { lat: -31.56391, lng: 147.154312 },\n      { lat: -33.718234, lng: 150.363181 }\n      // { lat: -34.327111, lng: 155.371124 }\n    ];\n  }\n\n  ngOnDestroy() {\n    if (this.mutationObserver) this.mutationObserver.disconnect();\n  }\n}\n", "<div class=\"session-card-wrapper\">\n  <div class=\"session-card pointer shadow-normal\" (click)=\"onDropdownToggle()\">\n    <div class=\"d-flex align-items-center\">\n      <div class=\"sc-icon\">\n        @if (sessionType === sessionTypes.BWV) {\n        <svg width=\"19\" height=\"24\" viewBox=\"0 0 19 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M18.999 12.7139C18.9992 13.1629 18.9985 13.5995 18.9998 14.0361C19.0011 14.4249 18.8125 14.6175 18.4253 14.6197C18.4085 14.6198 18.3917 14.6197 18.3576 14.6197C18.3576 14.6657 18.3576 14.7102 18.3576 14.7546C18.3576 16.9885 18.3561 19.2223 18.3582 21.4561C18.3593 22.7425 17.4423 23.7756 16.2753 23.9559C16.1311 23.9782 15.9845 23.9973 15.839 23.9974C11.3905 23.9997 6.94212 24.0012 2.49369 23.9987C1.27502 23.998 0.226173 23.0997 0.0299524 21.9C0.00956073 21.7754 0.00122392 21.6473 0.00119682 21.5208C-0.000156866 15.1754 -3.37238e-05 8.83007 4.1772e-05 2.48471C5.56221e-05 1.31084 0.909886 0.229156 2.05596 0.0470893C2.23712 0.0183102 2.42223 0.00189855 2.60553 0.00180289C6.99101 -0.000486381 11.3765 -0.000310416 15.762 0.000759185C16.9911 0.00105901 18.0047 0.801486 18.2907 2.00395C18.3352 2.1909 18.3533 2.38825 18.3546 2.581C18.361 3.52195 18.3576 4.46297 18.3576 5.40397C18.3576 5.45024 18.3576 5.49651 18.3576 5.54279C18.3642 5.53195 18.3708 5.52112 18.3774 5.51028C18.521 5.56463 18.6761 5.59978 18.8051 5.67846C18.9487 5.76598 18.9997 5.92427 18.9995 6.09523C18.9988 6.74799 19.0018 7.40077 18.9981 8.0535C18.9963 8.3565 18.7792 8.56458 18.4781 8.56623C18.4414 8.56643 18.4046 8.56625 18.3627 8.56625C18.3627 9.71293 18.3627 10.8511 18.3627 12.0054C18.4393 12.0054 18.5153 11.9947 18.5871 12.0074C18.8053 12.0463 18.9722 12.2357 18.9923 12.4603C18.9995 12.5402 18.9971 12.621 18.999 12.7139ZM17.4009 17.0741C17.4009 14.7808 17.3973 12.4875 17.4044 10.1943C17.4057 9.79544 17.3232 9.44919 16.9925 9.19305C17.3066 8.91331 17.4056 8.56225 17.404 8.15622C17.397 6.30383 17.401 4.4514 17.4009 2.59899C17.4008 1.71561 16.6815 0.986688 15.8097 0.986673C11.3904 0.986599 6.97113 0.989054 2.55186 0.984662C1.63626 0.983752 0.94037 1.75853 0.946877 2.58793C0.961543 4.45718 0.954566 6.32664 0.949176 8.19599C0.948058 8.5838 1.0481 8.91969 1.34147 9.19074C1.08742 9.42216 0.949648 9.69924 0.949905 10.0484C0.952708 13.8634 0.951925 17.6784 0.953848 21.4935C0.953907 21.611 0.962432 21.7305 0.984462 21.8457C1.10709 22.4867 1.74556 23.013 2.39411 23.013C3.5944 23.0131 4.79471 23.01 5.99499 23.0146C6.43963 23.0163 6.77412 22.8252 7.01196 22.4564C7.084 22.3447 7.16682 22.2982 7.29929 22.2987C8.54154 22.3024 9.78382 22.3032 11.0261 22.2978C11.1702 22.2972 11.2525 22.3508 11.3328 22.4658C11.571 22.807 11.8822 23.0172 12.318 23.0151C13.5309 23.0092 14.7438 23.014 15.9566 23.0113C16.0555 23.0111 16.1569 22.9961 16.2526 22.9705C16.9561 22.7827 17.4009 22.1955 17.4009 21.4613C17.4009 20.0074 17.4009 18.5534 17.4009 17.0741Z\"\n            fill=\"#4D7DBF\"\n          />\n          <path\n            d=\"M17.4004 17.0865C17.4004 18.5532 17.4004 20.0071 17.4004 21.4611C17.4003 22.1952 16.9556 22.7824 16.2521 22.9702C16.1564 22.9958 16.0549 23.0108 15.9561 23.011C14.7432 23.0137 13.5303 23.0089 12.3175 23.0148C11.8817 23.0169 11.5705 22.8068 11.3323 22.4656C11.2519 22.3505 11.1696 22.2969 11.0255 22.2975C9.78327 22.3029 8.541 22.3021 7.29874 22.2984C7.16628 22.298 7.08345 22.3444 7.01142 22.4561C6.77358 22.825 6.43909 23.016 5.99444 23.0143C4.79417 23.0098 3.59386 23.0129 2.39356 23.0127C1.74501 23.0127 1.10654 22.4865 0.983919 21.8454C0.961889 21.7302 0.953365 21.6107 0.953305 21.4932C0.951383 17.6782 0.952165 13.8631 0.949362 10.0481C0.949106 9.69895 1.08688 9.42187 1.34093 9.19046C1.04755 8.9194 0.947515 8.58351 0.948633 8.1957C0.954024 6.32635 0.961 4.4569 0.946334 2.58765C0.939827 1.75825 1.63571 0.983466 2.55132 0.984376C6.97058 0.988768 11.3899 0.986313 15.8091 0.986387C16.681 0.986402 17.4003 1.71532 17.4003 2.59871C17.4005 4.45112 17.3965 6.30355 17.4035 8.15593C17.405 8.56197 17.306 8.91302 16.992 9.19277C17.3227 9.4489 17.4051 9.79516 17.4039 10.194C17.3967 12.4872 17.4004 14.7805 17.4004 17.0865ZM7.44105 21.6646C8.65812 21.6646 9.87519 21.6674 11.0922 21.6628C11.4124 21.6615 11.6504 21.7944 11.8053 22.0687C11.9307 22.2908 12.1189 22.392 12.3592 22.3928C13.5218 22.3963 14.6843 22.3948 15.8469 22.3941C16.3673 22.3937 16.7575 21.9909 16.7565 21.4778C16.7498 17.6923 16.7522 13.9069 16.7548 10.1214C16.755 9.91768 16.6909 9.75773 16.5446 9.61714C16.2785 9.36137 16.2717 9.05928 16.5344 8.79889C16.6963 8.63838 16.7577 8.45816 16.7563 8.23388C16.7508 7.32676 16.7544 6.41959 16.7543 5.51244C16.7541 4.55442 16.7409 3.59617 16.7576 2.63846C16.7678 2.0558 16.2771 1.63878 15.761 1.64011C11.3584 1.65143 6.95579 1.6498 2.55322 1.6422C2.08223 1.64139 1.57044 2.02885 1.57532 2.63195C1.5903 4.48004 1.58367 6.32835 1.57704 8.17654C1.5761 8.43815 1.63864 8.64876 1.83108 8.83295C2.04224 9.03507 2.04278 9.29523 1.86145 9.52502C1.83017 9.56466 1.79672 9.60311 1.76045 9.63806C1.63175 9.76208 1.57253 9.91278 1.57921 10.0921C1.58252 10.181 1.58073 10.2701 1.58074 10.3591C1.58086 14.0597 1.58078 17.7604 1.5819 21.4611C1.58193 21.5491 1.58283 21.6405 1.60472 21.7246C1.71245 22.1387 2.04833 22.3926 2.4938 22.3935C3.66894 22.3959 4.84409 22.3962 6.01921 22.3923C6.22633 22.3916 6.39605 22.3053 6.50828 22.116C6.63934 21.8949 6.81771 21.7261 7.07795 21.6791C7.18797 21.6593 7.30315 21.6686 7.44105 21.6646Z\"\n            fill=\"#FDFDFD\"\n          />\n          <path\n            d=\"M7.42843 21.6651C7.30306 21.6691 7.18787 21.6598 7.07785 21.6796C6.81761 21.7266 6.63924 21.8954 6.50819 22.1165C6.39595 22.3059 6.22624 22.3922 6.01912 22.3928C4.84399 22.3967 3.66884 22.3964 2.49371 22.394C2.04824 22.3931 1.71236 22.1392 1.60462 21.7251C1.58274 21.641 1.58183 21.5496 1.58181 21.4616C1.58068 17.7609 1.58077 14.0603 1.58064 10.3596C1.58064 10.2706 1.58243 10.1815 1.57912 10.0926C1.57243 9.9133 1.63165 9.7626 1.76036 9.63858C1.79663 9.60363 1.83007 9.56518 1.86135 9.52554C2.04268 9.29575 2.04215 9.03559 1.83098 8.83347C1.63855 8.64928 1.576 8.43867 1.57694 8.17706C1.58358 6.32887 1.5902 4.48056 1.57523 2.63247C1.57034 2.02937 2.08213 1.64191 2.55312 1.64272C6.95569 1.65032 11.3583 1.65195 15.7609 1.64063C16.277 1.6393 16.7677 2.05633 16.7575 2.63898C16.7408 3.5967 16.754 4.55494 16.7542 5.51296C16.7543 6.42011 16.7507 7.32728 16.7562 8.2344C16.7576 8.45868 16.6962 8.6389 16.5343 8.79941C16.2716 9.0598 16.2784 9.36189 16.5445 9.61766C16.6908 9.75825 16.7549 9.9182 16.7547 10.122C16.7521 13.9074 16.7497 17.6928 16.7565 21.4783C16.7574 21.9914 16.3672 22.3943 15.8468 22.3946C14.6842 22.3953 13.5217 22.3969 12.3591 22.3933C12.1188 22.3926 11.9306 22.2913 11.8052 22.0693C11.6503 21.795 11.4123 21.6621 11.0921 21.6633C9.8751 21.6679 8.65802 21.6651 7.42843 21.6651ZM7.74294 11.5675C6.84901 11.5675 5.95508 11.5666 5.06116 11.5686C4.94862 11.5688 4.83538 11.5779 4.72371 11.5926C3.91928 11.6984 3.27338 12.4389 3.27324 13.2539C3.27288 15.1996 3.27246 17.1453 3.27481 19.091C3.27494 19.1996 3.29368 19.3093 3.31438 19.4164C3.46623 20.2018 4.20932 20.8171 5.08622 20.8126C7.81413 20.7987 10.5422 20.8077 13.2701 20.8072C13.3708 20.8072 13.4726 20.8102 13.5719 20.7967C14.3988 20.684 15.0581 19.918 15.0583 19.0726C15.0586 17.1566 15.0587 15.2406 15.0574 13.3246C15.0574 13.2363 15.0489 13.1473 15.0358 13.0599C14.9051 12.1849 14.1942 11.5674 13.3206 11.5675C11.4698 11.5676 9.61895 11.5675 7.74294 11.5675ZM11.8768 9.91885C12.6331 9.78648 13.2394 9.05139 13.2408 8.25757C13.2431 6.91842 13.2423 5.57926 13.2411 4.2401C13.241 4.12197 13.2337 4.00332 13.2213 3.88581C13.1402 3.1157 12.4473 2.48793 11.6787 2.48768C10.0382 2.48715 8.39766 2.48702 6.75711 2.48864C6.64064 2.48876 6.52314 2.49721 6.40789 2.51417C5.68257 2.6209 5.08649 3.31705 5.0863 4.0546C5.08595 5.47004 5.08618 6.88548 5.08633 8.30092C5.08634 8.34751 5.08346 8.39475 5.08977 8.44059C5.21044 9.3174 5.94852 9.96521 6.82609 9.9653C8.37852 9.96545 9.93096 9.96621 11.4834 9.96362C11.6078 9.96341 11.7322 9.93925 11.8768 9.91885ZM3.85247 3.74132C3.85279 3.65373 3.86458 3.56434 3.85135 3.47889C3.80693 3.19195 3.56069 2.98092 3.24913 2.95205C2.99352 2.92837 2.71384 3.11744 2.61789 3.37879C2.5227 3.63806 2.61495 3.94479 2.83645 4.10949C3.22525 4.3986 3.72228 4.1913 3.85247 3.74132ZM14.8508 4.19206C14.9904 4.25193 15.1341 4.26348 15.2775 4.21426C15.5311 4.1272 15.6947 3.947 15.7331 3.68155C15.7696 3.42908 15.6683 3.21598 15.4576 3.07256C15.2358 2.92156 14.9982 2.90261 14.7655 3.04936C14.3485 3.31231 14.3298 3.91295 14.8508 4.19206ZM7.94439 11.0593C7.75139 11.0593 7.55828 11.0552 7.36542 11.0604C7.18968 11.0652 7.05161 10.99 6.93214 10.8709C6.89548 10.8343 6.86845 10.7879 6.83013 10.7368C6.80869 11.0571 7.10128 11.2856 7.33643 11.2859C8.56157 11.2872 9.78672 11.2886 11.0119 11.2858C11.2848 11.2851 11.5296 11.0128 11.4933 10.7468C11.3389 11.0153 11.1055 11.0665 10.8268 11.0634C9.8745 11.0526 8.922 11.0593 7.94439 11.0593Z\"\n            fill=\"#4D7DBF\"\n          />\n          <path\n            d=\"M11.867 9.92154C11.7325 9.93826 11.6081 9.96241 11.4836 9.96262C9.93121 9.96522 8.37877 9.96446 6.82634 9.9643C5.94878 9.96421 5.2107 9.3164 5.09003 8.43959C5.08372 8.39376 5.08659 8.34651 5.08659 8.29992C5.08643 6.88448 5.08621 5.46904 5.08656 4.0536C5.08674 3.31606 5.68283 2.6199 6.40815 2.51318C6.52339 2.49622 6.6409 2.48776 6.75737 2.48765C8.39791 2.48603 10.0385 2.48616 11.679 2.48669C12.4476 2.48694 13.1405 3.11471 13.2216 3.88482C13.2339 4.00233 13.2413 4.12098 13.2414 4.2391C13.2425 5.57826 13.2433 6.91742 13.241 8.25658C13.2397 9.0504 12.6333 9.78549 11.867 9.92154ZM7.26473 3.09695C7.06754 3.09697 6.87032 3.09467 6.67316 3.09746C6.1992 3.10415 5.7689 3.47194 5.71839 3.9472C5.68543 4.25731 5.69632 4.57267 5.69571 4.8857C5.69362 5.96632 5.70108 7.04698 5.69331 8.12754C5.68729 8.96468 6.36251 9.36595 6.91603 9.35973C8.42208 9.34279 9.92844 9.35436 11.4347 9.35277C11.5302 9.35267 11.6279 9.34692 11.7207 9.32624C12.2169 9.21574 12.6243 8.75645 12.62 8.24279C12.6083 6.84444 12.6161 5.44593 12.6155 4.04748C12.6155 3.99275 12.6156 3.93661 12.6045 3.88352C12.5085 3.4252 12.1049 3.0977 11.6324 3.09734C10.1849 3.09625 8.73741 3.09695 7.26473 3.09695Z\"\n            fill=\"#FEFEFE\"\n          />\n          <path\n            d=\"M3.85185 3.75073C3.72272 4.19047 3.22569 4.39778 2.83688 4.10866C2.61539 3.94396 2.52314 3.63723 2.61832 3.37796C2.71427 3.11661 2.99396 2.92754 3.24957 2.95122C3.56112 2.98009 3.80737 3.19112 3.85178 3.47806C3.86501 3.56351 3.85322 3.6529 3.85185 3.75073Z\"\n            fill=\"#FDFDFD\"\n          />\n          <path\n            d=\"M14.8418 4.18939C14.33 3.91342 14.3487 3.31278 14.7657 3.04983C14.9984 2.90308 15.236 2.92203 15.4578 3.07303C15.6685 3.21645 15.7698 3.42955 15.7333 3.68202C15.6949 3.94747 15.5313 4.12767 15.2777 4.21473C15.1343 4.26395 14.9906 4.2524 14.8418 4.18939Z\"\n            fill=\"#FDFDFD\"\n          />\n          <path\n            d=\"M13.2453 12.1949C13.9442 12.1437 14.3692 12.6631 14.4466 13.1839C14.4534 13.2297 14.454 13.2767 14.454 13.3231C14.4543 15.2259 14.4557 17.1287 14.4535 19.0314C14.4527 19.6917 13.9209 20.1967 13.306 20.1944C10.5537 20.1841 7.80127 20.19 5.04889 20.1899C4.39546 20.1899 3.88 19.6726 3.87971 19.0141C3.87885 17.1029 3.8787 15.1917 3.87917 13.2804C3.8793 12.7287 4.34164 12.2296 4.8878 12.2017C5.15568 12.188 5.42466 12.1954 5.69315 12.1953C8.20636 12.1949 10.7196 12.195 13.2453 12.1949ZM13.525 18.6755C13.525 16.9673 13.5205 15.259 13.5294 13.5509C13.5308 13.2806 13.3754 13.081 13.0605 13.0828C11.4113 13.0923 9.76197 13.0867 8.11269 13.0865C7.16424 13.0864 6.2158 13.0863 5.26735 13.0865C4.96578 13.0866 4.80903 13.2418 4.80897 13.5425C4.80861 15.2973 4.80861 17.0521 4.80906 18.807C4.80913 19.0578 4.96876 19.2231 5.21078 19.2232C7.85048 19.2236 10.4902 19.2236 13.1299 19.2233C13.3165 19.2233 13.4749 19.1117 13.5143 18.9406C13.5321 18.8639 13.5221 18.7807 13.525 18.6755Z\"\n            fill=\"#4D7DBF\"\n          />\n          <path\n            d=\"M7.27742 3.09853C8.73751 3.09853 10.185 3.09783 11.6325 3.09892C12.105 3.09928 12.5086 3.42678 12.6046 3.8851C12.6157 3.93819 12.6156 3.99433 12.6156 4.04905C12.6162 5.4475 12.6084 6.84602 12.6201 8.24437C12.6244 8.75803 12.217 9.21732 11.7208 9.32783C11.628 9.3485 11.5303 9.35425 11.4348 9.35435C9.92854 9.35594 8.42218 9.34437 6.91612 9.36131C6.3626 9.36754 5.68738 8.96627 5.6934 8.12912C5.70117 7.04856 5.69371 5.96789 5.6958 4.88728C5.69641 4.57425 5.68552 4.25889 5.71848 3.94878C5.76899 3.47352 6.1993 3.10573 6.67326 3.09904C6.87041 3.09625 7.06763 3.09855 7.27742 3.09853ZM7.42949 8.09575C8.09253 8.68624 8.85567 8.9107 9.72456 8.72044C11.2864 8.37845 12.1046 6.72613 11.4903 5.24677C11.0112 4.09293 9.70695 3.46304 8.51049 3.7947C7.4835 4.07939 6.73139 4.96898 6.6534 6.02386C6.59432 6.82286 6.84522 7.51661 7.42949 8.09575Z\"\n            fill=\"#4D7DBF\"\n          />\n          <path\n            d=\"M7.42351 8.0881C6.84576 7.51517 6.59486 6.82143 6.65394 6.02243C6.73193 4.96754 7.48404 4.07795 8.51103 3.79327C9.70749 3.4616 11.0117 4.09149 11.4908 5.24533C12.1052 6.7247 11.2869 8.37701 9.7251 8.71901C8.85621 8.90927 8.09307 8.6848 7.42351 8.0881ZM9.31611 7.99546C9.37432 7.98867 9.43336 7.98606 9.49061 7.97446C10.413 7.78754 11.0494 6.92365 10.8816 5.94449C10.7179 4.98884 9.81035 4.3335 8.81189 4.53169C8.01202 4.69046 7.50447 5.38883 7.44346 6.10091C7.3515 7.1743 8.22714 8.08445 9.31611 7.99546Z\"\n            fill=\"#FDFDFD\"\n          />\n          <path\n            d=\"M9.30447 7.99721C8.22684 8.08429 7.3512 7.17414 7.44316 6.10074C7.50417 5.38867 8.01172 4.69029 8.81159 4.53153C9.81005 4.33334 10.7176 4.98868 10.8813 5.94433C11.0491 6.92349 10.4127 7.78738 9.49031 7.97429C9.43306 7.9859 9.37402 7.9885 9.30447 7.99721ZM9.20064 5.56296C9.13406 5.56707 9.06479 5.56061 9.00134 5.57705C8.67482 5.66169 8.44988 5.98416 8.48776 6.30449C8.52831 6.64739 8.80123 6.9049 9.14166 6.92148C9.49913 6.93889 9.82526 6.64826 9.84602 6.29376C9.86864 5.90774 9.5918 5.58298 9.20064 5.56296Z\"\n            fill=\"#4D7DBF\"\n          />\n          <path\n            d=\"M9.2119 5.56445C9.59159 5.58417 9.86843 5.90894 9.84582 6.29496C9.82506 6.64945 9.49893 6.94009 9.14146 6.92268C8.80102 6.90609 8.52811 6.64859 8.48756 6.30569C8.44967 5.98536 8.67462 5.66289 9.00114 5.57825C9.06459 5.5618 9.13386 5.56826 9.2119 5.56445Z\"\n            fill=\"#FDFDFD\"\n          />\n        </svg>\n        } @else {\n        <svg width=\"29\" height=\"12\" viewBox=\"0 0 29 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M17.8402 9.92477C18.4632 9.9248 19.0674 9.91974 19.6715 9.92812C19.8449 9.93052 19.9001 9.87433 19.8955 9.70315C19.868 8.69391 20.1768 7.80007 20.8724 7.05447C21.4662 6.41789 22.2018 6.07685 23.0837 6.03104C23.9617 5.98543 24.7641 6.18209 25.4425 6.74257C26.1754 7.34806 26.6308 8.11532 26.7079 9.07999C26.7268 9.31658 26.757 9.55068 26.7196 9.78729C26.7067 9.86901 26.7334 9.92319 26.8258 9.92433C27.3241 9.93045 27.8225 9.93024 28.2746 9.67723C28.7405 9.41645 28.982 9.01442 28.9912 8.48662C29.0007 7.93807 28.972 7.38823 28.9981 6.84074C29.0416 5.92979 28.3328 4.93107 27.3624 4.62627C26.7911 4.44685 26.1969 4.38901 25.61 4.29353C24.8313 4.16683 24.0509 4.05067 23.271 3.93106C22.7572 3.85226 22.2435 3.77294 21.7289 3.69979C21.6369 3.68672 21.5611 3.65315 21.4899 3.60028C20.0958 2.56505 18.699 1.53322 17.3091 0.492417C16.8752 0.167535 16.3925 0.00241164 15.8557 0.00158724C13.5146 -0.00200965 11.1735 0.00275766 8.83246 2.33791e-06C7.96475 -0.0010185 7.22196 0.332366 6.52522 0.808056C5.57205 1.45882 4.65621 2.16011 3.7274 2.84339C3.18771 3.24042 2.58552 3.45796 1.94866 3.62029C1.59017 3.71167 1.23563 3.81913 0.88167 3.92694C0.316313 4.09913 0.0147228 4.47797 0.00858307 5.07051C-0.00252724 6.14288 -0.00372314 7.21556 0.0101833 8.28787C0.0154057 8.69041 0.209602 9.03158 0.550194 9.24801C1.17179 9.64299 1.8535 9.88795 2.59871 9.9236C2.86493 9.93634 2.87324 9.92533 2.85611 9.65232C2.80927 8.90604 2.9843 8.21402 3.39406 7.59047C3.96143 6.7271 4.75541 6.18272 5.795 6.03784C7.74607 5.76594 9.29598 7.14566 9.62546 8.79282C9.68453 9.08814 9.68367 9.38836 9.66739 9.68634C9.65701 9.87632 9.71926 9.92988 9.91072 9.92937C12.2329 9.92314 14.5551 9.92507 16.8774 9.92487C17.192 9.92485 17.5067 9.92481 17.8402 9.92477ZM8.04188 1.42781C8.30485 1.3155 8.58261 1.25683 8.86585 1.25471C9.82196 1.24756 10.7782 1.25438 11.7343 1.24941C11.889 1.24861 11.941 1.29749 11.9394 1.45372C11.9321 2.15171 11.9362 2.84981 11.936 3.54788C11.936 3.80448 11.9358 3.80513 11.674 3.80516C9.56666 3.80546 7.45932 3.80554 5.35198 3.80541C5.29543 3.80541 5.23743 3.80974 5.18266 3.79912C5.08574 3.78032 5.00392 3.73462 4.97979 3.62897C4.95672 3.52798 5.01348 3.47032 5.09131 3.41409C5.60433 3.04348 6.10995 2.66268 6.62709 2.29788C7.07185 1.98414 7.50253 1.64565 8.04188 1.42781ZM13.2073 2.71455C13.2074 2.3093 13.2071 1.90404 13.2079 1.49879C13.2083 1.26708 13.2203 1.25266 13.4514 1.25225C14.2631 1.25078 15.0749 1.24759 15.8865 1.25389C16.1413 1.25587 16.3789 1.32434 16.5888 1.48529C17.1456 1.91235 17.7111 2.3284 18.2687 2.75457C18.7055 3.08843 19.1356 3.43087 19.5913 3.78715C19.4788 3.79451 19.3984 3.80432 19.318 3.80436C17.3484 3.80528 15.3789 3.80379 13.4093 3.80772C13.246 3.80805 13.2034 3.73931 13.2065 3.59361C13.2124 3.31318 13.2076 3.03253 13.2073 2.71455Z\"\n            fill=\"#4D7DBF\"\n          />\n          <path\n            d=\"M23.8821 6.91081C22.4779 6.60763 21.1316 7.50073 20.8166 8.84239C20.4809 10.2728 21.3802 11.6894 22.8386 11.9568C24.2001 12.2065 25.5131 11.3514 25.812 10.0059C26.1194 8.6221 25.3126 7.23154 23.8821 6.91081Z\"\n            fill=\"#4D7DBF\"\n          />\n          <path\n            d=\"M4.02448 10.6529C4.43073 11.3353 4.98978 11.7999 5.77422 11.9506C7.11826 12.2089 8.38511 11.4137 8.73305 10.0993C9.11009 8.67501 8.242 7.22371 6.83096 6.89774C5.42191 6.57223 3.94264 7.57077 3.73585 8.99565C3.65119 9.57897 3.75623 10.1205 4.02448 10.6529Z\"\n            fill=\"#4D7DBF\"\n          />\n        </svg>\n        }\n      </div>\n\n      <div class=\"ms-3 sc-creator\" [ellipsisCheck]=\"username\">\n        <span>{{ username }}</span>\n      </div>\n    </div>\n\n    <div class=\"sc-cal\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_1634_21588)\">\n          <path\n            d=\"M12.9109 1.23252H12.3141V0.628628C12.3141 0.283594 12.0344 0.00390625 11.6894 0.00390625C11.3444 0.00390625 11.0647 0.283594 11.0647 0.628628V1.23252H4.9353V0.628628C4.9353 0.283594 4.65561 0.00390625 4.31058 0.00390625C3.96555 0.00390625 3.68586 0.283594 3.68586 0.628628V1.23252H3.08909C1.38576 1.23252 0 2.61827 0 4.32158V12.9077C0 14.611 1.38576 15.9968 3.08909 15.9968H12.9109C14.6142 15.9968 16 14.611 16 12.9077V4.32158C16 2.61827 14.6142 1.23252 12.9109 1.23252ZM3.08909 2.48196H3.68586V3.70017C3.68586 4.0452 3.96555 4.32489 4.31058 4.32489C4.65561 4.32489 4.9353 4.0452 4.9353 3.70017V2.48196H11.0647V3.70017C11.0647 4.0452 11.3444 4.32489 11.6894 4.32489C12.0345 4.32489 12.3141 4.0452 12.3141 3.70017V2.48196H12.9109C13.9253 2.48196 14.7506 3.30722 14.7506 4.32158V4.91837H1.24944V4.32158C1.24944 3.30722 2.0747 2.48196 3.08909 2.48196ZM12.9109 14.7473H3.08909C2.0747 14.7473 1.24944 13.9221 1.24944 12.9077V6.16782H14.7506V12.9077C14.7506 13.9221 13.9253 14.7473 12.9109 14.7473ZM5.54962 8.62507C5.54962 8.9701 5.26993 9.24979 4.9249 9.24979H3.69629C3.35126 9.24979 3.07157 8.9701 3.07157 8.62507C3.07157 8.28003 3.35126 8.00035 3.69629 8.00035H4.9249C5.2699 8.00035 5.54962 8.28003 5.54962 8.62507ZM12.9285 8.62507C12.9285 8.9701 12.6488 9.24979 12.3037 9.24979H11.0751C10.7301 9.24979 10.4504 8.9701 10.4504 8.62507C10.4504 8.28003 10.7301 8.00035 11.0751 8.00035H12.3037C12.6487 8.00035 12.9285 8.28003 12.9285 8.62507ZM9.23548 8.62507C9.23548 8.9701 8.95579 9.24979 8.61076 9.24979H7.38215C7.03712 9.24979 6.75743 8.9701 6.75743 8.62507C6.75743 8.28003 7.03712 8.00035 7.38215 8.00035H8.61076C8.95576 8.00035 9.23548 8.28003 9.23548 8.62507ZM5.54962 12.3109C5.54962 12.656 5.26993 12.9356 4.9249 12.9356H3.69629C3.35126 12.9356 3.07157 12.656 3.07157 12.3109C3.07157 11.9659 3.35126 11.6862 3.69629 11.6862H4.9249C5.2699 11.6862 5.54962 11.9659 5.54962 12.3109ZM12.9285 12.3109C12.9285 12.656 12.6488 12.9356 12.3037 12.9356H11.0751C10.7301 12.9356 10.4504 12.656 10.4504 12.3109C10.4504 11.9659 10.7301 11.6862 11.0751 11.6862H12.3037C12.6487 11.6862 12.9285 11.9659 12.9285 12.3109ZM9.23548 12.3109C9.23548 12.656 8.95579 12.9356 8.61076 12.9356H7.38215C7.03712 12.9356 6.75743 12.656 6.75743 12.3109C6.75743 11.9659 7.03712 11.6862 7.38215 11.6862H8.61076C8.95576 11.6862 9.23548 11.9659 9.23548 12.3109Z\"\n            fill=\"#4D7DBF\"\n          />\n        </g>\n        <defs>\n          <clipPath id=\"clip0_1634_21588\">\n            <rect width=\"16\" height=\"16\" fill=\"white\" />\n          </clipPath>\n        </defs>\n      </svg>\n\n      <span class=\"timing-date\">\n        {{ $session()._start_time | date : 'dd MMMM y' }}&nbsp; ({{ $session()._start_time | date : 'EEEE' }})\n      </span>\n    </div>\n\n    <div class=\"sc-timing\">\n      <span class=\"timing-icon\">\n        <mat-icon>schedule</mat-icon>\n      </span>\n\n      <span class=\"timing-time\">\n        {{ $session()._start_time | date : 'hh:mm:ss' }}\n        <span class=\"text-primary-ash mx-1\">to</span>\n        {{ $session()._finish_time | date : 'hh:mm:ss' }}\n      </span>\n\n      <span class=\"timing-duration\"> ( {{ duration }} ) </span>\n    </div>\n\n    <div class=\"sc-location\" (mouseenter)=\"displayMap(true)\" (mouseleave)=\"displayMap(false)\">\n      <div class=\"d-flex align-items-center\">\n        <svg\n          class=\"flex-shrink-0\"\n          width=\"18\"\n          height=\"18\"\n          viewBox=\"0 0 18 18\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M9 16.875C8.93837 16.8744 8.87844 16.8548 8.82844 16.8187C8.58375 16.6303 2.8125 12.1781 2.8125 7.3125C2.8125 5.67147 3.4644 4.09766 4.62478 2.93728C5.78516 1.7769 7.35897 1.125 9 1.125C10.641 1.125 12.2148 1.7769 13.3752 2.93728C14.5356 4.09766 15.1875 5.67147 15.1875 7.3125C15.1875 12.1781 9.41625 16.6303 9.17156 16.8187C9.12156 16.8548 9.06163 16.8744 9 16.875ZM9 1.6875C7.50816 1.6875 6.07742 2.28013 5.02252 3.33502C3.96763 4.38992 3.375 5.82066 3.375 7.3125C3.375 11.4497 8.04094 15.4688 9 16.2338C9.95906 15.4688 14.625 11.4469 14.625 7.3125C14.625 5.82066 14.0324 4.38992 12.9775 3.33502C11.9226 2.28013 10.4918 1.6875 9 1.6875Z\"\n            fill=\"#4D7DBF\"\n            stroke=\"#4D7DBF\"\n            stroke-width=\"0.5\"\n          />\n          <path\n            d=\"M9 10.4063C8.38812 10.4063 7.78997 10.2248 7.28121 9.88486C6.77244 9.54492 6.37591 9.06174 6.14175 8.49643C5.90759 7.93112 5.84632 7.30907 5.9657 6.70894C6.08507 6.10881 6.37972 5.55756 6.81239 5.12489C7.24506 4.69222 7.79631 4.39757 8.39644 4.2782C8.99657 4.15882 9.61862 4.22009 10.1839 4.45425C10.7492 4.68841 11.2324 5.08494 11.5724 5.59371C11.9123 6.10247 12.0938 6.70062 12.0938 7.3125C12.0938 8.13302 11.7678 8.91992 11.1876 9.50011C10.6074 10.0803 9.82051 10.4063 9 10.4063ZM9 4.78125C8.49937 4.78125 8.00998 4.92971 7.59371 5.20784C7.17745 5.48598 6.85302 5.88131 6.66143 6.34383C6.46985 6.80636 6.41972 7.31531 6.51739 7.80632C6.61506 8.29734 6.85614 8.74836 7.21014 9.10237C7.56414 9.45637 8.01516 9.69745 8.50618 9.79512C8.99719 9.89278 9.50614 9.84266 9.96867 9.65107C10.4312 9.45949 10.8265 9.13505 11.1047 8.71879C11.3828 8.30253 11.5313 7.81314 11.5313 7.3125C11.5313 6.64117 11.2646 5.99734 10.7899 5.52264C10.3152 5.04794 9.67133 4.78125 9 4.78125Z\"\n            fill=\"#4D7DBF\"\n            stroke=\"#4D7DBF\"\n            stroke-width=\"0.5\"\n          />\n        </svg>\n        <span class=\"location-label\">GPS</span>\n      </div>\n\n      @if (mapVisible) {\n      <div class=\"map-popup-container shadow-normal\">\n        @if ($isMapLoaded()) {\n        <google-map height=\"100%\" width=\"100%\" [options]=\"mapOptions\">\n          @for (location of mapMarkers; track location) {\n          <map-advanced-marker [position]=\"location\" />\n          }\n        </google-map>\n        } @else {\n        <loader class=\"p-4\"></loader>\n        }\n      </div>\n      }\n    </div>\n\n    <div class=\"sc-category\">\n      @if (sessionType === sessionTypes.Streaming) {\n      <div class=\"w-fit d-flex\" matTooltip=\"Streamed\">\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4D7DBF\" fill-opacity=\"0.5\" />\n          <circle cx=\"7.99922\" cy=\"8.00312\" r=\"4.8\" fill=\"#4D7DBF\" fill-opacity=\"0.5\" />\n        </svg>\n      </div>\n      } @if (containsRedactedFiles) {\n      <div class=\"w-fit d-flex\" matTooltip=\"Redacted\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M14.4004 8.5C14.0026 8.5 13.621 8.65804 13.3397 8.93934C13.0584 9.22064 12.9004 9.60218 12.9004 10C12.9004 10.3978 13.0584 10.7794 13.3397 11.0607C13.621 11.342 14.0026 11.5 14.4004 11.5C14.7982 11.5 15.1797 11.342 15.4611 11.0607C15.7424 10.7794 15.9004 10.3978 15.9004 10C15.9004 9.60218 15.7424 9.22064 15.4611 8.93934C15.1797 8.65804 14.7982 8.5 14.4004 8.5ZM14.4004 12.5C14.0026 12.5 13.621 12.658 13.3397 12.9393C13.0584 13.2206 12.9004 13.6022 12.9004 14C12.9004 14.3978 13.0584 14.7794 13.3397 15.0607C13.621 15.342 14.0026 15.5 14.4004 15.5C14.7982 15.5 15.1797 15.342 15.4611 15.0607C15.7424 14.7794 15.9004 14.3978 15.9004 14C15.9004 13.6022 15.7424 13.2206 15.4611 12.9393C15.1797 12.658 14.7982 12.5 14.4004 12.5ZM10.4004 17C10.1352 17 9.88082 17.1054 9.69328 17.2929C9.50575 17.4804 9.40039 17.7348 9.40039 18C9.40039 18.2652 9.50575 18.5196 9.69328 18.7071C9.88082 18.8946 10.1352 19 10.4004 19C10.6656 19 10.92 18.8946 11.1075 18.7071C11.295 18.5196 11.4004 18.2652 11.4004 18C11.4004 17.7348 11.295 17.4804 11.1075 17.2929C10.92 17.1054 10.6656 17 10.4004 17ZM10.4004 8.5C10.0026 8.5 9.62103 8.65804 9.33973 8.93934C9.05843 9.22064 8.90039 9.60218 8.90039 10C8.90039 10.3978 9.05843 10.7794 9.33973 11.0607C9.62103 11.342 10.0026 11.5 10.4004 11.5C10.7982 11.5 11.1797 11.342 11.4611 11.0607C11.7424 10.7794 11.9004 10.3978 11.9004 10C11.9004 9.60218 11.7424 9.22064 11.4611 8.93934C11.1797 8.65804 10.7982 8.5 10.4004 8.5ZM14.4004 20.5C14.2678 20.5 14.1406 20.5527 14.0468 20.6464C13.9531 20.7402 13.9004 20.8674 13.9004 21C13.9004 21.1326 13.9531 21.2598 14.0468 21.3536C14.1406 21.4473 14.2678 21.5 14.4004 21.5C14.533 21.5 14.6602 21.4473 14.7539 21.3536C14.8477 21.2598 14.9004 21.1326 14.9004 21C14.9004 20.8674 14.8477 20.7402 14.7539 20.6464C14.6602 20.5527 14.533 20.5 14.4004 20.5ZM14.4004 17C14.1352 17 13.8808 17.1054 13.6933 17.2929C13.5057 17.4804 13.4004 17.7348 13.4004 18C13.4004 18.2652 13.5057 18.5196 13.6933 18.7071C13.8808 18.8946 14.1352 19 14.4004 19C14.6656 19 14.92 18.8946 15.1075 18.7071C15.295 18.5196 15.4004 18.2652 15.4004 18C15.4004 17.7348 15.295 17.4804 15.1075 17.2929C14.92 17.1054 14.6656 17 14.4004 17ZM21.4004 13.5C21.2678 13.5 21.1406 13.5527 21.0468 13.6464C20.9531 13.7402 20.9004 13.8674 20.9004 14C20.9004 14.1326 20.9531 14.2598 21.0468 14.3536C21.1406 14.4473 21.2678 14.5 21.4004 14.5C21.533 14.5 21.6602 14.4473 21.7539 14.3536C21.8477 14.2598 21.9004 14.1326 21.9004 14C21.9004 13.8674 21.8477 13.7402 21.7539 13.6464C21.6602 13.5527 21.533 13.5 21.4004 13.5ZM18.4004 5C18.1352 5 17.8808 5.10536 17.6933 5.29289C17.5057 5.48043 17.4004 5.73478 17.4004 6C17.4004 6.26522 17.5057 6.51957 17.6933 6.70711C17.8808 6.89464 18.1352 7 18.4004 7C18.6656 7 18.92 6.89464 19.1075 6.70711C19.295 6.51957 19.4004 6.26522 19.4004 6C19.4004 5.73478 19.295 5.48043 19.1075 5.29289C18.92 5.10536 18.6656 5 18.4004 5ZM18.4004 9C18.1352 9 17.8808 9.10536 17.6933 9.29289C17.5057 9.48043 17.4004 9.73478 17.4004 10C17.4004 10.2652 17.5057 10.5196 17.6933 10.7071C17.8808 10.8946 18.1352 11 18.4004 11C18.6656 11 18.92 10.8946 19.1075 10.7071C19.295 10.5196 19.4004 10.2652 19.4004 10C19.4004 9.73478 19.295 9.48043 19.1075 9.29289C18.92 9.10536 18.6656 9 18.4004 9ZM18.4004 17C18.1352 17 17.8808 17.1054 17.6933 17.2929C17.5057 17.4804 17.4004 17.7348 17.4004 18C17.4004 18.2652 17.5057 18.5196 17.6933 18.7071C17.8808 18.8946 18.1352 19 18.4004 19C18.6656 19 18.92 18.8946 19.1075 18.7071C19.295 18.5196 19.4004 18.2652 19.4004 18C19.4004 17.7348 19.295 17.4804 19.1075 17.2929C18.92 17.1054 18.6656 17 18.4004 17ZM18.4004 13C18.1352 13 17.8808 13.1054 17.6933 13.2929C17.5057 13.4804 17.4004 13.7348 17.4004 14C17.4004 14.2652 17.5057 14.5196 17.6933 14.7071C17.8808 14.8946 18.1352 15 18.4004 15C18.6656 15 18.92 14.8946 19.1075 14.7071C19.295 14.5196 19.4004 14.2652 19.4004 14C19.4004 13.7348 19.295 13.4804 19.1075 13.2929C18.92 13.1054 18.6656 13 18.4004 13ZM10.4004 12.5C10.0026 12.5 9.62103 12.658 9.33973 12.9393C9.05843 13.2206 8.90039 13.6022 8.90039 14C8.90039 14.3978 9.05843 14.7794 9.33973 15.0607C9.62103 15.342 10.0026 15.5 10.4004 15.5C10.7982 15.5 11.1797 15.342 11.4611 15.0607C11.7424 14.7794 11.9004 14.3978 11.9004 14C11.9004 13.6022 11.7424 13.2206 11.4611 12.9393C11.1797 12.658 10.7982 12.5 10.4004 12.5ZM10.4004 7C10.6656 7 10.92 6.89464 11.1075 6.70711C11.295 6.51957 11.4004 6.26522 11.4004 6C11.4004 5.73478 11.295 5.48043 11.1075 5.29289C10.92 5.10536 10.6656 5 10.4004 5C10.1352 5 9.88082 5.10536 9.69328 5.29289C9.50575 5.48043 9.40039 5.73478 9.40039 6C9.40039 6.26522 9.50575 6.51957 9.69328 6.70711C9.88082 6.89464 10.1352 7 10.4004 7ZM10.4004 3.5C10.533 3.5 10.6602 3.44732 10.7539 3.35355C10.8477 3.25979 10.9004 3.13261 10.9004 3C10.9004 2.86739 10.8477 2.74021 10.7539 2.64645C10.6602 2.55268 10.533 2.5 10.4004 2.5C10.2678 2.5 10.1406 2.55268 10.0468 2.64645C9.95307 2.74021 9.90039 2.86739 9.90039 3C9.90039 3.13261 9.95307 3.25979 10.0468 3.35355C10.1406 3.44732 10.2678 3.5 10.4004 3.5ZM10.4004 20.5C10.2678 20.5 10.1406 20.5527 10.0468 20.6464C9.95307 20.7402 9.90039 20.8674 9.90039 21C9.90039 21.1326 9.95307 21.2598 10.0468 21.3536C10.1406 21.4473 10.2678 21.5 10.4004 21.5C10.533 21.5 10.6602 21.4473 10.7539 21.3536C10.8477 21.2598 10.9004 21.1326 10.9004 21C10.9004 20.8674 10.8477 20.7402 10.7539 20.6464C10.6602 20.5527 10.533 20.5 10.4004 20.5ZM3.40039 13.5C3.26778 13.5 3.14061 13.5527 3.04684 13.6464C2.95307 13.7402 2.90039 13.8674 2.90039 14C2.90039 14.1326 2.95307 14.2598 3.04684 14.3536C3.14061 14.4473 3.26778 14.5 3.40039 14.5C3.533 14.5 3.66018 14.4473 3.75394 14.3536C3.84771 14.2598 3.90039 14.1326 3.90039 14C3.90039 13.8674 3.84771 13.7402 3.75394 13.6464C3.66018 13.5527 3.533 13.5 3.40039 13.5ZM14.4004 3.5C14.533 3.5 14.6602 3.44732 14.7539 3.35355C14.8477 3.25979 14.9004 3.13261 14.9004 3C14.9004 2.86739 14.8477 2.74021 14.7539 2.64645C14.6602 2.55268 14.533 2.5 14.4004 2.5C14.2678 2.5 14.1406 2.55268 14.0468 2.64645C13.9531 2.74021 13.9004 2.86739 13.9004 3C13.9004 3.13261 13.9531 3.25979 14.0468 3.35355C14.1406 3.44732 14.2678 3.5 14.4004 3.5ZM14.4004 7C14.6656 7 14.92 6.89464 15.1075 6.70711C15.295 6.51957 15.4004 6.26522 15.4004 6C15.4004 5.73478 15.295 5.48043 15.1075 5.29289C14.92 5.10536 14.6656 5 14.4004 5C14.1352 5 13.8808 5.10536 13.6933 5.29289C13.5057 5.48043 13.4004 5.73478 13.4004 6C13.4004 6.26522 13.5057 6.51957 13.6933 6.70711C13.8808 6.89464 14.1352 7 14.4004 7ZM21.4004 10.5C21.533 10.5 21.6602 10.4473 21.7539 10.3536C21.8477 10.2598 21.9004 10.1326 21.9004 10C21.9004 9.86739 21.8477 9.74021 21.7539 9.64645C21.6602 9.55268 21.533 9.5 21.4004 9.5C21.2678 9.5 21.1406 9.55268 21.0468 9.64645C20.9531 9.74021 20.9004 9.86739 20.9004 10C20.9004 10.1326 20.9531 10.2598 21.0468 10.3536C21.1406 10.4473 21.2678 10.5 21.4004 10.5ZM6.40039 5C6.13517 5 5.88082 5.10536 5.69328 5.29289C5.50575 5.48043 5.40039 5.73478 5.40039 6C5.40039 6.26522 5.50575 6.51957 5.69328 6.70711C5.88082 6.89464 6.13517 7 6.40039 7C6.66561 7 6.91996 6.89464 7.1075 6.70711C7.29503 6.51957 7.40039 6.26522 7.40039 6C7.40039 5.73478 7.29503 5.48043 7.1075 5.29289C6.91996 5.10536 6.66561 5 6.40039 5ZM3.40039 9.5C3.26778 9.5 3.14061 9.55268 3.04684 9.64645C2.95307 9.74021 2.90039 9.86739 2.90039 10C2.90039 10.1326 2.95307 10.2598 3.04684 10.3536C3.14061 10.4473 3.26778 10.5 3.40039 10.5C3.533 10.5 3.66018 10.4473 3.75394 10.3536C3.84771 10.2598 3.90039 10.1326 3.90039 10C3.90039 9.86739 3.84771 9.74021 3.75394 9.64645C3.66018 9.55268 3.533 9.5 3.40039 9.5ZM6.40039 9C6.13517 9 5.88082 9.10536 5.69328 9.29289C5.50575 9.48043 5.40039 9.73478 5.40039 10C5.40039 10.2652 5.50575 10.5196 5.69328 10.7071C5.88082 10.8946 6.13517 11 6.40039 11C6.66561 11 6.91996 10.8946 7.1075 10.7071C7.29503 10.5196 7.40039 10.2652 7.40039 10C7.40039 9.73478 7.29503 9.48043 7.1075 9.29289C6.91996 9.10536 6.66561 9 6.40039 9ZM6.40039 17C6.13517 17 5.88082 17.1054 5.69328 17.2929C5.50575 17.4804 5.40039 17.7348 5.40039 18C5.40039 18.2652 5.50575 18.5196 5.69328 18.7071C5.88082 18.8946 6.13517 19 6.40039 19C6.66561 19 6.91996 18.8946 7.1075 18.7071C7.29503 18.5196 7.40039 18.2652 7.40039 18C7.40039 17.7348 7.29503 17.4804 7.1075 17.2929C6.91996 17.1054 6.66561 17 6.40039 17ZM6.40039 13C6.13517 13 5.88082 13.1054 5.69328 13.2929C5.50575 13.4804 5.40039 13.7348 5.40039 14C5.40039 14.2652 5.50575 14.5196 5.69328 14.7071C5.88082 14.8946 6.13517 15 6.40039 15C6.66561 15 6.91996 14.8946 7.1075 14.7071C7.29503 14.5196 7.40039 14.2652 7.40039 14C7.40039 13.7348 7.29503 13.4804 7.1075 13.2929C6.91996 13.1054 6.66561 13 6.40039 13Z\"\n            fill=\"#00AEEF\"\n          />\n        </svg>\n      </div>\n      } @if ($session()._containStealth) {\n      <div class=\"w-fit d-flex\" matTooltip=\"Stealth\">\n        <svg width=\"16\" height=\"18\" viewBox=\"0 0 14 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M13.4271 4.11971C13.4189 3.68773 13.4111 3.27965 13.4111 2.88486C13.4111 2.57556 13.1604 2.32481 12.851 2.32481C10.4559 2.32481 8.63234 1.63649 7.11231 0.158576C6.89487 -0.0528959 6.54883 -0.0528212 6.33146 0.158576C4.81159 1.63649 2.98832 2.32481 0.593358 2.32481C0.284066 2.32481 0.0333169 2.57556 0.0333169 2.88486C0.0333169 3.27972 0.025551 3.68795 0.0172624 4.12001C-0.0595006 8.14006 -0.164639 13.6457 6.53846 15.9691C6.59789 15.9897 6.65987 16 6.72185 16C6.78383 16 6.84588 15.9897 6.90524 15.9691C13.6089 13.6456 13.5039 8.13983 13.4271 4.11971ZM6.72192 14.8457C0.97314 12.7573 1.06006 8.18254 1.1372 4.14136C1.14182 3.89883 1.14631 3.66376 1.14944 3.43332C3.39259 3.33864 5.18637 2.6589 6.72192 1.32122C8.25763 2.6589 10.0517 3.33871 12.295 3.43332C12.2981 3.66369 12.3026 3.8986 12.3073 4.14099C12.3843 8.18232 12.4712 12.7573 6.72192 14.8457Z\"\n            fill=\"#4D7DBF\"\n          />\n          <path\n            d=\"M8.65042 6.05462L5.94736 8.75753L4.7939 7.60407C4.57518 7.38543 4.22057 7.38543 4.00193 7.60407C3.78321 7.82286 3.78321 8.1774 4.00193 8.39612L5.55137 9.94556C5.66069 10.0549 5.80406 10.1095 5.94736 10.1095C6.09066 10.1095 6.23403 10.0549 6.34335 9.94556L9.44231 6.84667C9.6611 6.62796 9.6611 6.27334 9.44239 6.0547C9.22375 5.83598 8.86913 5.83591 8.65042 6.05462Z\"\n            fill=\"#4D7DBF\"\n          />\n        </svg>\n      </div>\n      }\n    </div>\n\n    <div class=\"sc-additional-icons\">\n      <div class=\"rounded-icon\">\n        <!-- <mat-icon>share</mat-icon> -->\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g clip-path=\"url(#clip0_681_62544)\">\n            <mask\n              id=\"mask0_681_62544\"\n              style=\"mask-type: luminance\"\n              maskUnits=\"userSpaceOnUse\"\n              x=\"0\"\n              y=\"0\"\n              width=\"24\"\n              height=\"24\"\n            >\n              <path d=\"M24 0H0V24H24V0Z\" fill=\"white\" />\n            </mask>\n            <g mask=\"url(#mask0_681_62544)\">\n              <path\n                d=\"M7 14C8.10457 14 9 13.1046 9 12C9 10.8954 8.10457 10 7 10C5.89543 10 5 10.8954 5 12C5 13.1046 5.89543 14 7 14Z\"\n                stroke=\"white\"\n                stroke-linejoin=\"round\"\n              />\n              <path\n                d=\"M17 8C18.1046 8 19 7.10457 19 6C19 4.89543 18.1046 4 17 4C15.8954 4 15 4.89543 15 6C15 7.10457 15.8954 8 17 8Z\"\n                stroke=\"white\"\n                stroke-linejoin=\"round\"\n              />\n              <path d=\"M15 7L8.5 11\" stroke=\"white\" />\n              <path\n                d=\"M17 20C18.1046 20 19 19.1046 19 18C19 16.8954 18.1046 16 17 16C15.8954 16 15 16.8954 15 18C15 19.1046 15.8954 20 17 20Z\"\n                stroke=\"white\"\n                stroke-linejoin=\"round\"\n              />\n              <path d=\"M8.5 13.5L15 17\" stroke=\"white\" />\n            </g>\n          </g>\n          <defs>\n            <clipPath id=\"clip0_681_62544\">\n              <rect width=\"24\" height=\"24\" fill=\"white\" />\n            </clipPath>\n          </defs>\n        </svg>\n      </div>\n\n      <div class=\"rounded-icon\">\n        <!-- <mat-icon>download</mat-icon> -->\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M5.625 15C5.625 14.5858 5.28921 14.25 4.875 14.25C4.46079 14.25 4.125 14.5858 4.125 15H5.625ZM19.275 15C19.275 14.5858 18.9392 14.25 18.525 14.25C18.1108 14.25 17.775 14.5858 17.775 15H19.275ZM11.1086 15.5387C10.8539 15.8653 10.9121 16.3366 11.2387 16.5914C11.5653 16.8461 12.0366 16.7879 12.2914 16.4613L11.1086 15.5387ZM16.1914 11.4613C16.4461 11.1347 16.3879 10.6634 16.0613 10.4086C15.7347 10.1539 15.2634 10.2121 15.0086 10.5387L16.1914 11.4613ZM11.1086 16.4613C11.3634 16.7879 11.8347 16.8461 12.1613 16.5914C12.4879 16.3366 12.5461 15.8653 12.2914 15.5387L11.1086 16.4613ZM8.39138 10.5387C8.13662 10.2121 7.66533 10.1539 7.33873 10.4086C7.01212 10.6634 6.95387 11.1347 7.20862 11.4613L8.39138 10.5387ZM10.95 16C10.95 16.4142 11.2858 16.75 11.7 16.75C12.1142 16.75 12.45 16.4142 12.45 16H10.95ZM12.45 5C12.45 4.58579 12.1142 4.25 11.7 4.25C11.2858 4.25 10.95 4.58579 10.95 5H12.45ZM4.125 15V16H5.625V15H4.125ZM4.125 16C4.125 18.0531 5.75257 19.75 7.8 19.75V18.25C6.61657 18.25 5.625 17.2607 5.625 16H4.125ZM7.8 19.75H15.6V18.25H7.8V19.75ZM15.6 19.75C17.6474 19.75 19.275 18.0531 19.275 16H17.775C17.775 17.2607 16.7834 18.25 15.6 18.25V19.75ZM19.275 16V15H17.775V16H19.275ZM12.2914 16.4613L16.1914 11.4613L15.0086 10.5387L11.1086 15.5387L12.2914 16.4613ZM12.2914 15.5387L8.39138 10.5387L7.20862 11.4613L11.1086 16.4613L12.2914 15.5387ZM12.45 16V5H10.95V16H12.45Z\"\n            fill=\"white\"\n          />\n        </svg>\n      </div>\n\n      <div class=\"relative\">\n        <!-- <mat-icon>more_vert</mat-icon> -->\n        <div (click)=\"expandOverflow($event)\" class=\"rounded-icon icon-overflow\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M8 7.9987H8.00667V8.00536H8V7.9987ZM8 3.33203H8.00667V3.3387H8V3.33203ZM8 12.6654H8.00667V12.672H8V12.6654Z\"\n              stroke=\"white\"\n              stroke-width=\"3\"\n              stroke-linejoin=\"round\"\n            />\n          </svg>\n        </div>\n\n        @if (overflowExpanded) {\n        <div class=\"dropdown-wrapper show\">\n          <div class=\"shadow-normal dropdown\">\n            @for (item of overflowContents; track $index) {\n            <li class=\"pointer\" (click)=\"onOverflowClick($event)\">\n              <span>{{ item }}</span>\n            </li>\n            }\n          </div>\n        </div>\n        }\n      </div>\n    </div>\n\n    <div class=\"sc-dropdown-toggle-wrapper d-flex align-items-center\">\n      <span class=\"text-primary-web me-2\">{{ filesLength }} {{ filesLength > 1 ? 'Items' : 'Item' }}</span>\n      <div class=\"dropdown-toggle-btn me-2\" [class.toggled]=\"$isDropdownExpanded()\">\n        <mat-icon class=\"toggle-icon\">keyboard_arrow_down</mat-icon>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"$isDropdownExpanded()\" class=\"card-dropdown-content-wrapper\">\n    @if ($session()._recordings.length !== 0) { @for (file of $session()._recordings; track $index) {\n    <file-card [filetype]=\"file.fileType\" [recFile]=\"file\" [session]=\"$session()\" />\n    } } @if ($session()._photos.length !== 0) { @for (file of $session()._photos; track $index) {\n    <file-card filetype=\"photo\" [photoFile]=\"file\" [session]=\"$session()\" />\n    } }\n  </div>\n</div>\n", "import { Component, inject } from '@angular/core';\n\nimport { UserSessionService } from 'src/app/core/session/user-session.service';\nimport { SessionGroupsModel } from 'src/app/api/model/models';\n\nimport { SessionService } from '../session.service';\nimport { SearchService } from './search.service';\n\n@Component({\n  selector: 'search',\n  standalone: false,\n  templateUrl: './search.component.html',\n  styleUrl: './search.component.scss'\n})\nexport class SearchComponent {\n  private readonly searchService = inject(SearchService);\n  private readonly sessionService = inject(SessionService);\n  private readonly userSession = inject(UserSessionService);\n\n  loggedInUserId: number;\n  searchMode: string = '';\n\n  isFirstTimeDialogOpen = true;\n  isLoading = false;\n\n  constructor() {\n    this.loggedInUserId = this.userSession.userId;\n  }\n\n  get sessionsList(): SessionGroupsModel[] {\n    return this.sessionService.sessionsList;\n  }\n\n  get sessionExpandedList() {\n    return this.sessionService.sessionExpandedList;\n  }\n\n  get isFirstSearch() {\n    return this.sessionService.isFirstSearch;\n  }\n\n  set isFirstSearch(value: boolean) {\n    this.sessionService.isFirstSearch = value;\n  }\n\n  onLoadingEvent(state: boolean) {\n    this.searchMode = 'Basic';\n    this.isLoading = state;\n  }\n\n  onSessionSelect(event: HTMLInputElement, id: string) {\n    this.searchService.updateSelectedSessions(id, event.checked ? 'add' : 'remove');\n  }\n\n  ngOnInit() {\n    // * To collapse all the expanded session cards when coming from the details page\n    this.sessionService.sessionExpandedList = new Array(this.sessionService.sessionExpandedList.length).fill(false);\n  }\n\n  ngOnDestroy() {}\n}\n", "<div class=\"search-page-wrapper\">\n  <div class=\"basic-search-wrapper\">\n    <basic-filter (onLoadingEvent)=\"onLoadingEvent($event)\" />\n  </div>\n\n  <!-- * Loader -->\n  @if(isLoading) {\n  <div class=\"d-flex justify-content-center loader-wrapper\">\n    <loader />\n  </div>\n  }\n\n  <!-- * Empty State -->\n  @if (!isLoading && sessionsList.length === 0) {\n  <div class=\"empty-state-wrapper\">\n    <div class=\"row\">\n      <div class=\"mx-auto col-4 text-center\">\n        <svg width=\"61\" height=\"60\" viewBox=\"0 0 61 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g clip-path=\"url(#clip0_84_55427)\">\n            <path\n              d=\"M48 7.50156H31.675C31.3 7.50156 30.9 7.40156 30.55 7.22656L22.65 3.27656C21.625 2.75156 20.45 2.47656 19.3 2.47656H12.975C6.1 2.50156 0.5 8.10156 0.5 15.0016V45.0016C0.5 51.9016 6.1 57.5016 13 57.5016H30.5C31.875 57.5016 33 56.3766 33 55.0016C33 53.6266 31.875 52.5016 30.5 52.5016H13C8.875 52.5016 5.5 49.1266 5.5 45.0016V22.5016H55.5V30.0016C55.5 31.3766 56.625 32.5016 58 32.5016C59.375 32.5016 60.5 31.3766 60.5 30.0016V20.0016C60.5 13.1016 54.9 7.50156 48 7.50156ZM5.5 15.0016C5.5 10.8766 8.875 7.50156 13 7.50156H19.325C19.7 7.50156 20.1 7.60156 20.45 7.77656L28.35 11.7266C29.375 12.2516 30.55 12.5266 31.7 12.5266H48.025C51.275 12.5266 54.075 14.6266 55.1 17.5266H5.5V15.0266V15.0016ZM59.775 41.7766L52.8 48.8016L59.775 55.7516C60.75 56.7266 60.75 58.3016 59.775 59.2766C59.275 59.7766 58.65 60.0016 58 60.0016C57.35 60.0016 56.725 59.7516 56.225 59.2766L49.25 52.3266L42.35 59.2516C41.85 59.7516 41.225 59.9766 40.575 59.9766C39.925 59.9766 39.3 59.7266 38.8 59.2516C37.825 58.2766 37.825 56.7016 38.8 55.7266L45.7 48.8016L38.725 41.8516C37.75 40.8766 37.75 39.3016 38.725 38.3266C39.7 37.3516 41.275 37.3516 42.25 38.3266L49.225 45.2766L56.2 38.2516C57.175 37.2766 58.75 37.2766 59.725 38.2516C60.7 39.2266 60.7 40.8016 59.725 41.7766H59.775Z\"\n              fill=\"#132530\"\n              fill-opacity=\"0.71\"\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0_84_55427\">\n              <rect width=\"60\" height=\"60\" fill=\"white\" transform=\"translate(0.5)\" />\n            </clipPath>\n          </defs>\n        </svg>\n        <h4 class=\"text-primary-charcoal mb-2 font-medium h4\">No sessions found</h4>\n        <p class=\"text-primary-ash font-medium text-normal lh-20\">\n          You can search “sessions” by using <br />\n          the search option\n        </p>\n      </div>\n    </div>\n  </div>\n  }\n\n  <!-- * Results -->\n  @if (!isLoading && sessionsList.length !== 0) {\n  <div class=\"search-results-wrapper\">\n    @for (session of sessionsList; track $index; let i = $index) {\n    <div class=\"d-flex align-items-start mb-2\">\n      <input\n        #myCheckbox\n        class=\"pointer\"\n        [id]=\"session._session_id\"\n        type=\"checkbox\"\n        (click)=\"onSessionSelect(myCheckbox, session._session_id)\"\n      />\n\n      <label>\n        <session-card [session]=\"session\" [isDropdownExpanded]=\"sessionExpandedList[i]\" />\n      </label>\n    </div>\n    }\n  </div>\n  }\n</div>\n", "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SessionComponent } from './session.component';\nimport { SearchComponent } from './search/search.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SessionComponent,\n    children: [\n      { path: 'search', component: SearchComponent },\n      {\n        path: 'details',\n        loadChildren: () => import('./details/details.module').then((m) => m.DetailsModule)\n      },\n      { path: '', pathMatch: 'full', redirectTo: 'search' }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SessionRoutingModule {}\n", "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GoogleMapsModule } from '@angular/google-maps';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { SessionRoutingModule } from './session-routing.module';\n\nimport { SearchComponent } from './search/search.component';\nimport { SessionComponent } from './session.component';\n\nimport { BasicFilterComponent } from './components/basic-filter/basic-filter.component';\nimport { AdvancedFilterComponent } from './components/advanced-filter/advanced-filter.component';\nimport { SaveSearchComponent } from './components/save-search/save-search.component';\nimport { SessionCardComponent } from './components/session-card/session-card.component';\nimport { FileCardComponent } from './components/file-card/file-card.component';\nimport { AddCaseComponent } from './components/add-case/add-case.component';\n\n@NgModule({\n  declarations: [\n    SearchComponent,\n    SessionComponent,\n    BasicFilterComponent,\n    AdvancedFilterComponent,\n    SaveSearchComponent,\n    SessionCardComponent,\n    FileCardComponent,\n    AddCaseComponent\n  ],\n  imports: [CommonModule, SharedModule.forRoot(), GoogleMapsModule, SessionRoutingModule]\n})\nexport class SessionModule {}\n"],
  "mappings": "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",
  "names": ["SessionComponent", "selectors", "standalone", "decls", "vars", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275elementContainerStart", "\u0275\u0275listener", "item_r4", "\u0275\u0275restoreView", "_r3", "$implicit", "ctx_r4", "\u0275\u0275nextContext", "\u0275\u0275resetView", "$selectedSavedSearch", "getSelectedItem", "\u0275\u0275template", "SaveSearchComponent_div_6_ng_container_2_Conditional_7_Template", "SaveSearchComponent_div_6_ng_container_2_Conditional_8_Template", "\u0275\u0275advance", "\u0275\u0275conditional", "SaveSearchComponent_div_6_ng_container_2_Template", "\u0275\u0275property", "$saveSearchList", "SaveSearchComponent", "el", "inject", "ElementRef", "dialog", "MatDialog", "input", "required", "alias", "$customClass", "$disabled", "$isSaveSearchExpanded", "signal", "constructor", "openDialog", "templateRef", "open", "width", "expandSaveSearch", "update", "prev", "item", "set", "closeDropdown", "event", "nativeElement", "contains", "target", "selectors", "hostBindings", "rf", "ctx", "$event", "\u0275\u0275resolveDocument", "_r1", "template_r2", "\u0275\u0275reference", "i0", "SaveSearchComponent_div_6_Template", "SaveSearchComponent_ng_template_7_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275classMapInterpolate1", "\u0275\u0275classProp", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "item_r4", "\u0275\u0275restoreView", "_r3", "$implicit", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "handleSingleSelectDrop", "\u0275\u0275text", "\u0275\u0275classProp", "$formdata", "mediaSource", "includes", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "item_r6", "_r5", "handleMultiSelectDrop", "bwvEvent", "item_r8", "_r7", "sessionLocation", "item_r10", "_r9", "sessionFilter", "item_r12", "_r11", "inCarVideo", "$event", "_r1", "handleDateChange", "\u0275\u0275twoWayListener", "i0", "\u0275\u0275twoWayBindingSet", "organization", "eventId", "user", "classification", "eventNumber", "caseNumber", "victimPOI", "offence", "\u0275\u0275repeaterCreate", "AdvancedFilterComponent_div_1_For_27_Template", "\u0275\u0275repeaterTrackByIndex", "AdvancedFilterComponent_div_1_For_32_Template", "AdvancedFilterComponent_div_1_For_37_Template", "AdvancedFilterComponent_div_1_For_42_Template", "AdvancedFilterComponent_div_1_For_48_Template", "resetFilters", "onSearch", "\u0275\u0275property", "date", "organizationList", "\u0275\u0275twoWayProperty", "accountList", "\u0275\u0275repeater", "mediaSourceList", "listDisabled", "bwvList", "sessionLocationList", "sessionFiltersList", "icvList", "saveSearchList", "canSaveAndReset", "isFormValid", "AdvancedFilterComponent", "searchService", "inject", "SearchService", "organizationApiService", "OrganizationApiService", "categoryApiService", "CategoryApiService", "eventCodeApiService", "EventCodeApiService", "userApiService", "UserApiService", "formData", "isLoading", "selectedFromDateModel", "selectedToDateModel", "SessionData", "organizationIdList", "accountIdList", "categoryList", "categoryIdList", "bwvIdList", "constructor", "isUnchanged", "data", "updateFormData", "val", "updateDateRange", "start", "end", "key", "existing_list", "push", "index", "indexOf", "splice", "resetForm", "console", "log", "selectors", "standalone", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "AdvancedFilterComponent_div_0_Template", "AdvancedFilterComponent_div_1_Template", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "paginate", "\u0275\u0275elementEnd", "\u0275\u0275property", "currentPage", "itemsPerPage", "totalItems", "BasicFilterComponent", "dialog", "inject", "MatDialog", "datePipe", "DatePipe", "searchService", "SearchService", "sessionApiService", "SessionApiService", "userSession", "UserSessionService", "sessionService", "SessionService", "organizationApiService", "OrganizationApiService", "categoryApiService", "CategoryApiService", "userApiService", "UserApiService", "datePicker", "selectComponent", "onSearchEvent", "output", "onLoadingEvent", "destroy$", "Subject", "$formdata", "formData", "organizationList", "SessionData", "organizationIdList", "accountList", "accountIdList", "categoryList", "categoryIdList", "loggedInUserId", "isLoading", "saveSearchList", "searchResultText", "isPaginationEnabled", "constructor", "userId", "canAddCase", "selectedSessions", "length", "isFirstSearch", "isFormValid", "date", "dateRange", "start", "end", "user", "canSaveAndReset", "isUnchanged", "totalSessionCount", "toggleAllFilters", "open", "AdvancedFilterComponent", "panelClass", "disableClose", "afterClosed", "subscribe", "result", "testFilterSessions", "toggleAddToCase", "AddCaseComponent", "console", "log", "handleDateChange", "data", "updateFormData", "val", "updateDateRange", "handleMultiSelectDrop", "key", "existing_list", "includes", "push", "index", "indexOf", "splice", "resetFilters", "resetForm", "resetFields", "forEach", "comp", "page_number", "filterSessions", "current_date", "Date", "few_days_back", "setDate", "getDate", "emit", "apiMediaSearchGetFilterMediaSearch", "currentPageNo", "searchMode", "userID", "loggedInUserID", "combinedSearch", "from", "toISOString", "to", "includeExpired", "includeLiveSessions", "pipe", "takeUntil", "next", "response", "TotalSessionsCount", "sessionsList", "SessionGroups", "sessionExpandedList", "Array", "fill", "error", "firstSearch", "setTimeout", "sessionList", "filter", "session", "i", "transform", "ngOnInit", "then", "now", "ngOnDestroy", "complete", "selectors", "viewQuery", "rf", "ctx", "DatePickerComponent", "SelectSimpleFieldComponent", "\u0275\u0275twoWayListener", "i0", "\u0275\u0275twoWayBindingSet", "freeText", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275template", "BasicFilterComponent_Conditional_39_Template", "\u0275\u0275advance", "\u0275\u0275twoWayProperty", "mediaCategory", "\u0275\u0275sanitizeHtml", "\u0275\u0275conditional", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "ctx_r1", "duration", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "routeToDetails", "\u0275\u0275template", "FileCardComponent_div_0_Conditional_3_Template", "FileCardComponent_div_0_Conditional_4_Template", "FileCardComponent_div_0_Conditional_5_Template", "FileCardComponent_div_0_Conditional_6_Template", "FileCardComponent_div_0_Conditional_7_Template", "FileCardComponent_div_0_Conditional_8_Template", "FileCardComponent_div_0_Conditional_9_Template", "FileCardComponent_div_0_Conditional_10_Template", "FileCardComponent_div_0_Conditional_11_Template", "FileCardComponent_div_0_Conditional_39_Template", "\u0275\u0275classProp", "fileNotExists", "redactionInProgress", "\u0275\u0275conditional", "fileType", "includes", "\u0275\u0275property", "$filetype", "$photoFile", "uniqueFileName", "$recFile", "\u0275\u0275textInterpolate2", "\u0275\u0275pipeBind2", "createdDate", "startiTme", "finishTime", "\u0275\u0275textInterpolate", "fileLocation", "cameraModel", "FileCardComponent", "router", "inject", "Router", "detailsService", "DetailsService", "calculationHelpers", "CalculationHelpers", "input", "required", "alias", "$session", "undefined", "fileLocationNames", "SessionConstants", "fileLocations", "constructor", "notExists", "central", "dock", "inProgress", "cantShowFile", "cantShow", "start", "Date", "diff", "getTime", "secondsToTime", "cameraAssetTag", "type", "isOriginalFile", "isClipped", "originalFile", "_recordings", "filter", "rec", "_containsPrerecord", "fid", "navigate", "updateCurrentSelection", "session_id", "_session_id", "file_id", "file_type", "selectors", "inputs", "standalone", "decls", "vars", "consts", "template", "rf", "ctx", "FileCardComponent_div_0_Template", "environment", "production", "googleMapsApiKey", "GoogleMapsService", "$api_loaded", "signal", "api_loaded", "asReadonly", "loadPromise", "initialize", "Promise", "resolve", "reject", "script", "document", "createElement", "src", "environment", "googleMapsApiKey", "async", "defer", "onload", "set", "onerror", "undefined", "head", "appendChild", "factory", "\u0275fac", "providedIn", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275property", "location_r1", "\u0275\u0275repeaterCreate", "SessionCardComponent_Conditional_40_Conditional_1_For_2_Template", "\u0275\u0275repeaterTrackByIdentity", "ctx_r1", "mapOptions", "\u0275\u0275advance", "\u0275\u0275repeater", "mapMarkers", "\u0275\u0275template", "SessionCardComponent_Conditional_40_Conditional_1_Template", "SessionCardComponent_Conditional_40_Conditional_2_Template", "\u0275\u0275conditional", "$isMapLoaded", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onOverflowClick", "\u0275\u0275text", "\u0275\u0275textInterpolate", "item_r4", "SessionCardComponent_Conditional_67_For_3_Template", "\u0275\u0275repeaterTrackByIndex", "overflowContents", "file_r5", "fileType", "$session", "SessionCardComponent_div_74_Conditional_1_For_1_Template", "_recordings", "file_r6", "SessionCardComponent_div_74_Conditional_2_For_1_Template", "_photos", "SessionCardComponent_div_74_Conditional_1_Template", "SessionCardComponent_div_74_Conditional_2_Template", "length", "SessionCardComponent", "el", "inject", "ElementRef", "sessionService", "SessionService", "googleMapsService", "GoogleMapsService", "calculationHelpers", "CalculationHelpers", "fileCardComponent", "input", "required", "alias", "$isDropdownExpanded", "mutationObserver", "sessionTypes", "SessionConstants", "api_loaded", "mapVisible", "isTooltipDisabled", "dropdownState", "overflowExpanded", "username", "_username", "filesLength", "excludedFiles", "filter", "file", "duration", "start", "Date", "_start_time", "diff", "_finish_time", "getTime", "calculated_time", "secondsToTime", "timeToWords", "containsRedactedFiles", "rec", "sessionType", "onDropdownToggle", "updateSessionList", "_session_id", "expandOverflow", "event", "stopPropagation", "closeDropdown", "nativeElement", "contains", "target", "routeToDetails", "displayMap", "state", "ngAfterViewInit", "MutationObserver", "document", "querySelectorAll", "forEach", "dialog", "textContent", "includes", "open", "close", "err", "console", "warn", "observe", "body", "childList", "subtree", "ngOnInit", "__async", "initialize", "mapId", "Math", "random", "toString", "substring", "center", "lat", "lng", "zoom", "disableDefaultUI", "keyboardShortcuts", "ngOnDestroy", "disconnect", "selectors", "viewQuery", "rf", "ctx", "FileCardComponent", "\u0275\u0275resolveDocument", "SessionCardComponent_Conditional_4_Template", "SessionCardComponent_Conditional_5_Template", "SessionCardComponent_Conditional_40_Template", "SessionCardComponent_Conditional_42_Template", "SessionCardComponent_Conditional_43_Template", "SessionCardComponent_Conditional_44_Template", "SessionCardComponent_Conditional_67_Template", "SessionCardComponent_div_74_Template", "BWV", "\u0275\u0275textInterpolate2", "\u0275\u0275pipeBind2", "\u0275\u0275textInterpolate1", "Streaming", "_containStealth", "\u0275\u0275classProp", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275listener", "session_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "myCheckbox_r3", "\u0275\u0275reference", "ctx_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onSessionSelect", "_session_id", "\u0275\u0275advance", "\u0275\u0275property", "sessionExpandedList", "\u0275$index_43_r5", "\u0275\u0275repeaterCreate", "SearchComponent_Conditional_5_For_2_Template", "\u0275\u0275repeaterTrackByIndex", "\u0275\u0275repeater", "sessionsList", "SearchComponent", "searchService", "inject", "SearchService", "sessionService", "SessionService", "userSession", "UserSessionService", "loggedInUserId", "searchMode", "isFirstTimeDialogOpen", "isLoading", "constructor", "userId", "isFirstSearch", "value", "onLoadingEvent", "state", "event", "id", "updateSelectedSessions", "checked", "ngOnInit", "Array", "length", "fill", "ngOnDestroy", "selectors", "standalone", "decls", "vars", "consts", "template", "rf", "ctx", "$event", "\u0275\u0275template", "SearchComponent_Conditional_3_Template", "SearchComponent_Conditional_4_Template", "SearchComponent_Conditional_5_Template", "\u0275\u0275conditional", "routes", "path", "component", "SessionComponent", "children", "SearchComponent", "loadChildren", "then", "m", "DetailsModule", "pathMatch", "redirectTo", "SessionRoutingModule", "RouterModule", "forChild", "SessionModule", "CommonModule", "SharedModule", "forRoot", "GoogleMapsModule", "SessionRoutingModule"]
}
