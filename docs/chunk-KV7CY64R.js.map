{
  "version": 3,
  "sources": ["src/app/modules/auth/forgot-password/forgot-password.component.ts", "src/app/modules/auth/forgot-password/forgot-password.component.html", "src/app/modules/auth/forgot-password/forgot-password-routing.module.ts", "src/app/modules/auth/forgot-password/forgot-password.module.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\n\nimport { UntypedFormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  standalone: false,\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss'\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public loginForm!: UntypedFormGroup;\n  public isAuthLoading = false;\n  public ResetPasswordUserName = true;\n  public ResetPasswordEmail = false;\n  public showPassword: boolean = false;\n  public version: string = '';\n\n  message: any;\n  currentView: string;\n\n  constructor(private toastr: ToastrService) {\n    this.currentView = (window as any)['passwordResetView'];\n    var _message = (window as any)['message'];\n    if (_message == null || _message.type == null) {\n      return;\n    }\n    this.message = (window as any)['message'];\n    console.log(this.message);\n  }\n\n  ngOnInit() {\n    this.loginForm = new UntypedFormGroup({\n      email: new UntypedFormControl(null, Validators.required),\n      password: new UntypedFormControl(null, Validators.required)\n    });\n  }\n\n  public togglePasswordVisibility(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n  async loginByAuth() {\n    if (this.loginForm.valid) {\n      this.isAuthLoading = true;\n      this.isAuthLoading = false;\n    } else {\n      this.toastr.error('Form is not valid!');\n    }\n  }\n\n  showEmail() {\n    this.currentView = 'email';\n  }\n\n  showUsername() {\n    this.currentView = 'username';\n  }\n}\n", "<div id=\"resetPassword-component\" class=\"h-100 bg-image\">\n  <div class=\"g-0 overlay\">\n    <div class=\"screen-card\">\n      <div class=\"logo\">\n        <img src=\"assets/img/c8b00319-2bb7-4001-9316-580b17ffc717_480.png\" />\n      </div>\n      <input name=\"passwordResetView\" type=\"hidden\" [ngModel]=\"currentView\" />\n      <div class=\"input-heading\">Let’s reset your password!</div>\n      <div *ngIf=\"currentView == 'username'\">\n        <div class=\"form-group\">\n          <mat-form-field appearance=\"outline\" class=\"example-full-width mask\">\n            <mat-label>Username</mat-label>\n            <input name=\"username\" autocomplete=\"off\" value=\"\" type=\"text\" matInput />\n          </mat-form-field>\n        </div>\n        <div class=\"input-bottom\" (click)=\"showEmail()\">\n          <a>Use your email instead?</a>\n        </div>\n      </div>\n      <div *ngIf=\"currentView == 'email'\">\n        <div class=\"form-group\">\n          <mat-form-field appearance=\"outline\" class=\"example-full-width mask\">\n            <mat-label>Email</mat-label>\n            <input autocomplete=\"off\" name=\"email\" value=\"\" type=\"text\" matInput />\n          </mat-form-field>\n        </div>\n        <div class=\"input-bottom\" (click)=\"showUsername()\">\n          <a>Use your username instead?</a>\n        </div>\n      </div>\n      <div class=\"btns-section\">\n        <div class=\"anchor\"><a href=\"/\">Back to login</a></div>\n        <div class=\"login-btn\">\n          <button class=\"btn btn-primary\">Reset password</button>\n        </div>\n      </div>\n\n      <div *ngIf=\"message\" [class]=\"'alert alert-' + message.type\" role=\"alert\" style=\"margin-top: 50px\">\n        {{ message.text }}\n      </div>\n    </div>\n\n    <div class=\"term-of-services\">\n      <div class=\"policy-text\">\n        By clicking on “Login”, you are agreeing to our\n        <a href=\"/Terms.aspx\">Terms of service</a> and <br />\n        acknowledge that our Privacy policy applies to you\n      </div>\n      <div class=\"version-text\">© 2023 m-View Live Video Pty Ltd | Altitude version: {{ version }}</div>\n    </div>\n  </div>\n</div>\n", "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ForgotPasswordComponent } from './forgot-password.component';\n\nconst routes: Routes = [{ path: '', component: ForgotPasswordComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgotPasswordRoutingModule {}\n", "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ForgotPasswordComponent } from './forgot-password.component';\nimport { ForgotPasswordRoutingModule } from './forgot-password-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [ForgotPasswordComponent],\n  imports: [CommonModule, SharedModule.forRoot(), ForgotPasswordRoutingModule]\n})\nexport class ForgotPasswordModule {}\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "showEmail", "_r3", "showUsername", "\u0275\u0275classMap", "message", "type", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "text", "ForgotPasswordComponent", "toastr", "loginForm", "isAuthLoading", "ResetPasswordUserName", "ResetPasswordEmail", "showPassword", "version", "currentView", "constructor", "window", "_message", "console", "log", "ngOnInit", "UntypedFormGroup", "email", "UntypedFormControl", "Validators", "required", "password", "togglePasswordVisibility", "loginByAuth", "__async", "valid", "error", "\u0275\u0275directiveInject", "ToastrService", "selectors", "standalone", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "ForgotPasswordComponent_div_8_Template", "ForgotPasswordComponent_div_9_Template", "ForgotPasswordComponent_div_17_Template", "\u0275\u0275property", "routes", "path", "component", "ForgotPasswordComponent", "ForgotPasswordRoutingModule", "RouterModule", "forChild", "ForgotPasswordModule", "CommonModule", "SharedModule", "forRoot", "ForgotPasswordRoutingModule"]
}
